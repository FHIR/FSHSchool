<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FSH School – SUSHI</title>
    <link>https://fshschool.org/docs/sushi/</link>
    <description>Recent content in SUSHI on FSH School</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://fshschool.org/docs/sushi/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Installation</title>
      <link>https://fshschool.org/docs/sushi/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fshschool.org/docs/sushi/installation/</guid>
      <description>
        
        
        &lt;h2 id=&#34;step-1-install-nodejs&#34;&gt;Step 1: Install Node.js&lt;/h2&gt;
&lt;p&gt;SUSHI requires Node.js. To install Node.js, go to &lt;a href=&#34;https://nodejs.org/&#34;&gt;https://nodejs.org/&lt;/a&gt; and select the &amp;ldquo;LTS&amp;rdquo; download. If the download is not appropriate for your operating system, click the &amp;ldquo;Other Downloads&amp;rdquo; link to get a full list of downloads. Once the installer is downloaded, run it using the default options.&lt;/p&gt;
&lt;p&gt;Ensure that Node.js is correctly installed by opening a command window and typing the following two commands. Each command should return a version number.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;i class=&#34;fas fa-dollar-sign&#34;&gt;&lt;/i&gt; node --version
&lt;i class=&#34;fas fa-dollar-sign&#34;&gt;&lt;/i&gt; npm --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;step-2-install-sushi&#34;&gt;Step 2: Install SUSHI&lt;/h2&gt;
&lt;p&gt;To install SUSHI, open up a command prompt and type the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;i class=&#34;fas fa-dollar-sign&#34;&gt;&lt;/i&gt; npm install -g fsh-sushi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Check the installation via the command below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;i class=&#34;fas fa-dollar-sign&#34;&gt;&lt;/i&gt; sushi &lt;span style=&#34;color:#204a87&#34;&gt;help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If the command outputs instructions on using the SUSHI command line interface (CLI), you&amp;rsquo;re ready to run SUSHI.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;sushi -v&lt;/code&gt; to display the installed version of SUSHI and the version of the FSH specification it supports. SUSHI follows the &lt;a href=&#34;https://semver.org&#34;&gt;semantic versioning&lt;/a&gt; convention (MAJOR.MINOR.PATCH):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MAJOR&lt;/strong&gt;: A major release has significant new functionality and, potentially, grammar changes or other non-backward-compatible changes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MINOR&lt;/strong&gt;: Contains new or modified features, while maintaining backwards compatibility within the major version.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PATCH&lt;/strong&gt;: Contains minor updates and bug fixes, while maintaining backwards compatibility within the major version.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;
For the most up-to-date information and latest releases of SUSHI, check the &lt;a href=&#34;https://github.com/FHIR/sushi/releases&#34;&gt;release history and release notes&lt;/a&gt;.
&lt;/div&gt;

&lt;h2 id=&#34;reverting-sushi&#34;&gt;Reverting SUSHI&lt;/h2&gt;
&lt;p&gt;To revert to a previous version of SUSHI, run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;i class=&#34;fas fa-dollar-sign&#34;&gt;&lt;/i&gt; npm install -g fsh-sushi@&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;version&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;where the &lt;code&gt;{version}&lt;/code&gt; is replaced by the desired MAJOR.MINOR.PATCH version (e.g., &lt;code&gt;npm install -g fsh-sushi@2.2.6&lt;/code&gt;).&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Project Structure</title>
      <link>https://fshschool.org/docs/sushi/project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fshschool.org/docs/sushi/project/</guid>
      <description>
        
        
        &lt;h2 id=&#34;minimal-project&#34;&gt;Minimal Project&lt;/h2&gt;
&lt;p&gt;The simplest FSH project contains only a configuration file and an &lt;strong&gt;input/fsh&lt;/strong&gt; subdirectory of FSH files containing FHIR Shorthand definitions. It might look like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;my-project
├── input
|    └── fsh
|        ├── file1.fsh
|        ├── file2.fsh
|        └── file3.fsh
└── sushi-config.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Each FSH file can contain multiple FSH definitions of varying types. FSH file names are not significant, but must end with the &lt;strong&gt;.fsh&lt;/strong&gt; extension. In addition, FSH files can be organized into subdirectories. This provides authors the flexibility to organize their FSH definitions in whatever way makes sense to then.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;sushi-config.yaml&lt;/strong&gt; file provides project configuration data to SUSHI. It is described further in the &lt;a href=&#34;https://fshschool.org/docs/sushi/configuration/&#34;&gt;Configuration&lt;/a&gt; documentation.&lt;/p&gt;
&lt;h2 id=&#34;initializing-a-sushi-project&#34;&gt;Initializing a SUSHI Project&lt;/h2&gt;
&lt;p&gt;Setting up a fully-featured FSH project can be complex, so SUSHI provides an &lt;code&gt;init&lt;/code&gt; command to do it automatically. When &lt;code&gt;sushi init&lt;/code&gt; is run, SUSHI will request project information from the user:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Name (Default: ExampleIG): my-project
Id (Default: fhir.example): my.id
Canonical (Default: http://example.org): http://myid.org
Status (Default: draft): active
Version (Default: 0.1.0): 2.0.0
Release Label (Default: ci-build): trial-use
Publisher Name (Default: Example Publisher): MyPublisher
Publisher Url (Default: http://example.org/example-publisher): http://my-publisher.org
Initialize SUSHI project in C:\Users\shorty\dev\my-project? [y/n]: y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;These values are then used to generate a project structure compatible with the FHIR IG Publisher:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;my-project
├── .gitignore
├── _genonce.bat
├── _genonce.sh
├── _updatePublisher.bat
├── _updatePublisher.sh
├── ig.ini
├── input
|   ├── ignoreWarnings.txt
|   ├── fsh
|   |   └── patient.fsh
|   └── pagecontent
|       └── index.md
└── sushi-config.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In addition to the &lt;strong&gt;input/fsh&lt;/strong&gt; folder, &lt;code&gt;init&lt;/code&gt; creates an &lt;strong&gt;input/pagecontent&lt;/strong&gt; folder containing a dummy home page for your IG. The files &lt;strong&gt;ig.ini&lt;/strong&gt; and &lt;strong&gt;ignoreWarnings.txt&lt;/strong&gt; are required by the &lt;a href=&#34;https://build.fhir.org/ig/FHIR/ig-guidance/using-templates.html&#34;&gt;template-based IG Publisher&lt;/a&gt;. The &lt;code&gt;.bat&lt;/code&gt; and &lt;code&gt;.sh&lt;/code&gt; scripts which allow you to &lt;a href=&#34;https://fshschool.org/docs/sushi/running/#downloading-the-ig-publisher&#34;&gt;run the IG Publisher&lt;/a&gt; from your command line. Finally, a default &lt;code&gt;.gitignore&lt;/code&gt; file for integration with GitHub is provided. From this point on, you can modify the configuration and definitions as necessary.&lt;/p&gt;
&lt;h2 id=&#34;using-the-hl7-ig-publisher-and-auto-builder&#34;&gt;Using the HL7 IG Publisher and Auto-Builder&lt;/h2&gt;
&lt;p&gt;This project structure integrates with the HL7 IG Publisher &lt;a href=&#34;https://github.com/FHIR/auto-ig-builder/blob/master/README.md&#34;&gt;Auto-Builder&lt;/a&gt;. When the IG Publisher detects an &lt;strong&gt;input/fsh&lt;/strong&gt; subdirectory, it will automatically run SUSHI on the project directory and output the SUSHI results to a &lt;strong&gt;fsh-generated&lt;/strong&gt; directory (e.g., &lt;strong&gt;my-project/fsh-generated&lt;/strong&gt; in the example above). It will then continue with the normal IG Publisher process.&lt;/p&gt;
&lt;p&gt;This approach allows a GitHub repository to be configured such that whenever changes to FSH files are pushed to GitHub, the &lt;a href=&#34;https://github.com/FHIR/auto-ig-builder/blob/master/README.md&#34;&gt;Auto-Builder&lt;/a&gt; will pick them up, run the SUSHI/IG Publisher process, and publish the resulting IG to &lt;a href=&#34;http://build.fhir.org&#34;&gt;http://build.fhir.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;SUSHI provides support for several of the files and directories required by the &lt;a href=&#34;https://build.fhir.org/ig/FHIR/ig-guidance/&#34;&gt;template-based IG Publisher&lt;/a&gt; for building Implementation Guides. Some IG customizations can be configured using additional properties in the &lt;strong&gt;sushi-config.yaml&lt;/strong&gt; file. A FSH project integrated into the template-based IG Publisher may look like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;my-project
├── ig.ini
├── input
|   ├── fsh
|   |   ├── file1.fsh
|   |   ├── file2.fsh
|   |   └── file3.fsh
│   ├── ignoreWarnings.txt
│   ├── images
│   │   ├── myDocument.pdf
│   │   ├── myGraphic.png
│   │   └── mySpreadsheet.xlsx
│   ├── includes
│   │   └── menu.xml
│   └── pagecontent
│       ├── 1_mySecondPage.md
│       ├── 2_myThirdPage.md
│       ├── 3_myFourthPage.md
│       └── index.md
├── package-list.json
├── sushi-ignoreWarnings.txt
└── sushi-config.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;
Examples of &lt;strong&gt;package.json&lt;/strong&gt;, &lt;strong&gt;ig.ini&lt;/strong&gt;, &lt;strong&gt;package-list.json&lt;/strong&gt;, &lt;strong&gt;ignoreWarnings.txt&lt;/strong&gt; and &lt;strong&gt;menu.xml&lt;/strong&gt; files can be found in the &lt;a href=&#34;https://github.com/FHIR/sample-ig&#34;&gt;sample IG project&lt;/a&gt; provided for this purpose. In addition, more general guidance can be found in &lt;a href=&#34;https://build.fhir.org/ig/FHIR/ig-guidance/&#34;&gt;Guidance for HL7 IG Creation&lt;/a&gt;.
&lt;/div&gt;

&lt;p&gt;You can populate your project as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;sushi-config.yaml&lt;/strong&gt;: This file provides configuration data to SUSHI. It is described further in the &lt;a href=&#34;https://fshschool.org/docs/sushi/configuration/&#34;&gt;Configuration&lt;/a&gt; documentation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;input/fsh/*.fsh&lt;/strong&gt;: FSH files contain the FHIR Shorthand definitions for all the resources and examples in your IG.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ig.ini&lt;/strong&gt;: Configuration file required for the FHIR IG Publication process. NOTE: As of the SUSHI 1.0 release, this file MUST use a template based on &lt;code&gt;fhir.base.template#current&lt;/code&gt;. Specific template versions (i.e., other than &lt;code&gt;#current&lt;/code&gt;) are expected to work in the future.  For now, any of the following should work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;template = fhir.base.template#current&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;template = hl7.base.template#current&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;template = hl7.fhir.template#current&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;template = hl7.davinci.template#current&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;template = hl7.cda.template#current&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;input/ignoreWarnings.txt&lt;/strong&gt;: This file is used to suppress specific QA warnings and information messages produced by the FHIR IG Publisher (as opposed to SUSHI).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;input/images/*&lt;/strong&gt;: Put anything that is not a page in the IG, such as images, spreadsheets or zip files, in the &lt;strong&gt;input/images&lt;/strong&gt; subdirectory. These files can be referenced by user-provided pages or menus.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;input/includes/menu.xml&lt;/strong&gt;: If present, this file will be used for the IG&amp;rsquo;s main menu layout. Note that the presence of this file will block usage of the &lt;code&gt;menu&lt;/code&gt; property in &lt;strong&gt;sushi-config.yaml&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;input/pagecontent/*&lt;/strong&gt;: Put either markup (.xml) or markdown (.md) files with the narrative content of your IG in the &lt;strong&gt;input/pagecontent/&lt;/strong&gt; subdirectory. These files are the sources for the html pages that accompany the automatically-generated pages of your IG. The header and footer of these pages are automatically generated, so your content should not include these elements. Any number of pages can be added. In addition to stand-alone pages, you can provide additional text for generated artifact pages. The naming of these files is significant:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;index.xml|md&lt;/strong&gt;: This file provides the content for the IG&amp;rsquo;s main page.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;N_pagename.xml|md&lt;/strong&gt;: If present, these files will be generated as individual pages in the IG. The leading integer (N) determines the order of the pages in the table of contents. Adding a leading integer is optional, and in the absence of a leading integer, SUSHI will sort the pages alphabetically. The order of the pages can also be explitly specified with the &lt;code&gt;pages&lt;/code&gt; property in &lt;strong&gt;sushi-config.yaml&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;{artifact-file-name}-intro.xml|md&lt;/strong&gt;: If present, the contents of the file will be placed on the relevant page &lt;em&gt;before&lt;/em&gt; the artifact&amp;rsquo;s definition.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;{artifact-file-name}-notes.xml|md&lt;/strong&gt;: If present, the contents of the file will be placed on the relevant page &lt;em&gt;after&lt;/em&gt; the artifact&amp;rsquo;s definition.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;input/{supported-resource-input-directory}/*&lt;/strong&gt; (not shown above): JSON or XML files in &lt;a href=&#34;https://build.fhir.org/ig/FHIR/ig-guidance/using-templates.html#root.input&#34;&gt;supported resource directories&lt;/a&gt; (e.g., &lt;strong&gt;profiles&lt;/strong&gt;, &lt;strong&gt;extensions&lt;/strong&gt;, &lt;strong&gt;examples&lt;/strong&gt;, etc.) can be referenced by FHIR artifacts defined in FSH, and will be added to the generated &lt;strong&gt;ImplementationGuide.json&lt;/strong&gt; file. If there are additional subfolders (e.g., input/resources/nested), use the &lt;code&gt;path-resource&lt;/code&gt; parameter in &lt;strong&gt;sushi-config.yaml&lt;/strong&gt; to tell the IG Publisher which additional input paths to process (see &lt;a href=&#34;https://fshschool.org/docs/sushi/tips/#specifying-additional-resource-paths&#34;&gt;Specifying Additional Resource Paths&lt;/a&gt; for details).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;package-list.json&lt;/strong&gt;: This optional file, described &lt;a href=&#34;https://confluence.hl7.org/display/FHIR/FHIR+IG+PackageList+doco&#34;&gt;here&lt;/a&gt;, should contain the version history of your IG.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;sushi-ignoreWarnings.txt&lt;/strong&gt;: This optional file can be used to suppress warnings logged by SUSHI. Errors and informational logs from SUSHI cannot be ignored. This file should be placed either at the root of the project (e.g., &lt;strong&gt;my-project/sushi-ignoreWarnings.txt&lt;/strong&gt; in the example above), or within the &lt;strong&gt;input&lt;/strong&gt; directory (e.g., &lt;strong&gt;my-project/input/sushi-ignoreWarnings.txt&lt;/strong&gt;). Warnings will be ignored if they completely match the contents of any line of the file (one line per warning, case-sensitive). Regular expressions can also be specified, one per line, indicated by starting and ending the line with &lt;code&gt;/&lt;/code&gt;. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Instance PatientExample1 is not an instance of a resource, so it should only be used inline on other instances, and it will not be exported to a standalone file. Specify &amp;quot;Usage: #inline&amp;quot; to remove this warning.
/Detected the following non-conformant Resource definitions.*/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Any warning which exactly matches the contents of the first line will be ignored. The second line specifies that any warning beginning with &lt;code&gt;Detected the following non-conformant Resource definitions&lt;/code&gt; will be ignored.&lt;/p&gt;


&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;
SUSHI does log several multi-line warnings, but these warnings cannot be specified directly in the &lt;strong&gt;sushi-ignoreWarnings.txt&lt;/strong&gt; file, since the warnings to ignore must be specified line by line. To ignore these warnings, a regular expression should be used.
&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Configuration</title>
      <link>https://fshschool.org/docs/sushi/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fshschool.org/docs/sushi/configuration/</guid>
      <description>
        
        
        &lt;p&gt;SUSHI is configured by a single &lt;strong&gt;sushi-config.yaml&lt;/strong&gt; file. This file is written using &lt;a href=&#34;https://yaml.org/&#34;&gt;YAML&lt;/a&gt;. Authors unfamiliar with &lt;a href=&#34;https://learnxinyminutes.com/docs/yaml/&#34;&gt;YAML&lt;/a&gt; should note that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;White space (new lines and indentation) is significant&lt;/li&gt;
&lt;li&gt;Information is presented in &lt;code&gt;key: value&lt;/code&gt; pairs&lt;/li&gt;
&lt;li&gt;Strings do not have to be quoted unless they contain reserved characters, such as colon (:)&lt;/li&gt;
&lt;li&gt;Arrays/sequences are created using &lt;code&gt;-&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;fsh-only-minimum-configuration&#34;&gt;FSH Only: Minimum Configuration&lt;/h2&gt;
&lt;p&gt;If an author does not have an &lt;strong&gt;ImplementationGuide&lt;/strong&gt; resource, and wants SUSHI to build FHIR definition files and &lt;em&gt;not&lt;/em&gt; to do any additional IG processing, the author should create a &lt;strong&gt;sushi-config.yaml&lt;/strong&gt; with the keys &lt;code&gt;FSHOnly&lt;/code&gt; (with value &lt;code&gt;true&lt;/code&gt;), &lt;code&gt;canonical&lt;/code&gt;, and &lt;code&gt;fhirVersion&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FSHOnly&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fhirVersion&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4.0.1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;canonical&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;http&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;//hl7.org/fhir/us/example&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;strong&gt;sushi-config.yaml&lt;/strong&gt; file should be located in the project&amp;rsquo;s root folder.&lt;/p&gt;
&lt;h2 id=&#34;fsh-only-existing-implementationguide-resource&#34;&gt;FSH Only: Existing ImplementationGuide Resource&lt;/h2&gt;
&lt;p&gt;If an author wants SUSHI only to build the FHIR definition files and &lt;em&gt;not&lt;/em&gt; to do any additional IG processing, AND the project contains an &lt;strong&gt;ImplementationGuide&lt;/strong&gt; resource, then the author does not need to provide a &lt;strong&gt;sushi-config.yaml&lt;/strong&gt; file. If there is no &lt;strong&gt;sushi-config.yaml&lt;/strong&gt; file, SUSHI will attempt to extract the following information from the &lt;strong&gt;ImplementationGuide&lt;/strong&gt; resource:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;canonical&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;url&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;packageId&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fhirVersion&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dependencies&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parameters&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SUSHI will then run in FSHOnly mode to produce FHIR definition files only.&lt;/p&gt;
&lt;p&gt;To locate the &lt;strong&gt;ImplementationGuide&lt;/strong&gt; resource, SUSHI assumes the project structure required by the &lt;a href=&#34;https://build.fhir.org/ig/FHIR/ig-guidance/&#34;&gt;template-based IG Publisher&lt;/a&gt;, and uses the following approach:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Look for &lt;code&gt;&amp;lt;root&amp;gt;/ig.ini&lt;/code&gt;, where &lt;code&gt;&amp;lt;root&amp;gt;&lt;/code&gt; is the folder containing the &lt;strong&gt;input&lt;/strong&gt; folder. If the &lt;strong&gt;ig.ini&lt;/strong&gt; file exists, it will have an &lt;code&gt;ig&lt;/code&gt; property which gives the path to the &lt;strong&gt;ImplementationGuide&lt;/strong&gt; resource, so SUSHI will use this path to find the resource.&lt;/li&gt;
&lt;li&gt;If there is no &lt;strong&gt;ig.ini&lt;/strong&gt; in the root folder, SUSHI will search the &lt;code&gt;&amp;lt;root&amp;gt;/input&lt;/code&gt; folder for an &lt;strong&gt;ImplementationGuide&lt;/strong&gt; resource, and if exactly one resource is found, SUSHI will extract the above properties from it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;fsh-and-ig-processing-minimum-configuration&#34;&gt;FSH and IG Processing: Minimum Configuration&lt;/h2&gt;
&lt;p&gt;If the author wants SUSHI to do additional Implementation Guide (IG) processing, then the &lt;strong&gt;sushi-config.yaml&lt;/strong&gt; file must provide some metadata values for the FSH project. Here is an example of a minimal configuration:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;fhir.us.example&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;canonical&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;http&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;//hl7.org/fhir/us/example&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;ExampleIG&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;status&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;draft&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0.1.0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fhirVersion&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4.0.1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;copyrightYear&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2020&lt;/span&gt;+&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;releaseLabel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;ci-build&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://fshschool.org/docs/sushi/configuration/minimum-config.yaml&#34;&gt;&lt;i class=&#39;fas fa-download fa-fw&#39;&gt;&lt;/i&gt; Download Minimum Configuration Example&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For an official HL7 project, the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;canonical&lt;/code&gt; will typically be assigned by the &lt;a href=&#34;mailto:fhir-director@hl7.org&#34;&gt;FHIR Product Director&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;canonical&lt;/code&gt; refers to the &lt;em&gt;canonical base&lt;/em&gt; of the IG, not the canonical URL of the IG resource (e.g., &lt;code&gt;http://hl7.org/fhir/us/example&lt;/code&gt;, &lt;em&gt;not&lt;/em&gt; &lt;code&gt;http://hl7.org/fhir/us/example/ImplementationGuide/fhir.us.example&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Valid values for &lt;code&gt;status&lt;/code&gt; include:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;draft&lt;/code&gt;: The IG is still under development and is not yet considered to be ready for normal use.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;active&lt;/code&gt;: The IG is ready for normal use.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;retired&lt;/code&gt;: The IG has been withdrawn or superseded and should no longer be used.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unknown&lt;/code&gt;: It is not know which of the status values currently applies for the IG. This should be rare.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Since SUSHI currently supports only FHIR R4 and R5, the &lt;code&gt;fhirVersion&lt;/code&gt; should always be &lt;code&gt;4.0.0&lt;/code&gt; or above.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;releaseLabel&lt;/code&gt; is a text label with no fixed set of values that describes the status of the publication to users. Recommended best practices include the following values, optionally suffixed with &lt;code&gt;Ballot&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ci-build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;STU1&lt;/code&gt;, &lt;code&gt;STU2&lt;/code&gt;, etc.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;STU 1.1&lt;/code&gt;, &lt;code&gt;STU 1.1.0&lt;/code&gt;, etc.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Normative 1&lt;/code&gt;, etc.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Informative 1&lt;/code&gt;, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;
SUSHI can generate a simple configuration file for you with the &lt;code&gt;init&lt;/code&gt; &lt;a href=&#34;https://fshschool.org/docs/sushi/project/#initializing-a-sushi-project&#34;&gt;command&lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&#34;fsh-and-ig-processing-recommended-configuration&#34;&gt;FSH and IG Processing: Recommended Configuration&lt;/h2&gt;
&lt;p&gt;In addition to the minimum configuration requirements shown above, most IG authors will also want to provide a &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, &lt;code&gt;license&lt;/code&gt;, &lt;code&gt;publisher&lt;/code&gt;, and &lt;code&gt;dependencies&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;fhir.us.example&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;canonical&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;http&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;//hl7.org/fhir/us/example&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;ExampleIG&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#dfdfdf&#34;&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;HL7 FHIR Implementation Guide: Example IG Release 1 - US Realm | STU1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#dfdfdf&#34;&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;description&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;An&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;example&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;IG&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;that&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;exercises&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;many&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;of&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;the&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;fields&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;in&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;a&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;SUSHI&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;configuration&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;status&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;draft&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#dfdfdf&#34;&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;license&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;CC0&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;-1.0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0.1.0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fhirVersion&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4.0.1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;copyrightYear&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2020&lt;/span&gt;+&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;releaseLabel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;ci-build&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#dfdfdf&#34;&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;publisher&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#dfdfdf&#34;&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;HL7&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;International&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;- US&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Realm&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Steering&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Committee&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#dfdfdf&#34;&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;http&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;//www.hl7.org/Special/committees/usrealm/index.cfm&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#dfdfdf&#34;&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;email&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;usrsc@lists.HL7.org&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#dfdfdf&#34;&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;dependencies&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#dfdfdf&#34;&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hl7.fhir.us.core&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3.1.0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://fshschool.org/docs/sushi/configuration/recommended-config.yaml&#34;&gt;&lt;i class=&#39;fas fa-download fa-fw&#39;&gt;&lt;/i&gt; Download Recommended Configuration Example&lt;/a&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
The &lt;code&gt;license&lt;/code&gt; value should come from the &lt;a href=&#34;http://hl7.org/fhir/R4/valueset-spdx-license.html&#34;&gt;SPDX Licence Value Set&lt;/a&gt;, although most FHIR IGs use the &lt;code&gt;CC0-1.0&lt;/code&gt; (Creative Commons Zero v1.0 Universal) license.
&lt;/div&gt;

&lt;h3 id=&#34;dependencies&#34;&gt;Dependencies&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;dependencies&lt;/code&gt; value is a YAML object for which the keys are each dependency&amp;rsquo;s package id and the values are the dependency versions. The typical format is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;dependencies&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hl7.fhir.us.core&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3.1.0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In addition to standard version identifiers, the following three special versions are supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dev&lt;/code&gt;: indicates that the dependency should be loaded from the local FHIR cache&lt;/li&gt;
&lt;li&gt;&lt;code&gt;current&lt;/code&gt;: indicates that the dependency should be loaded from the last successful auto-build.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;latest&lt;/code&gt;: indicates that the dependency should be loaded using the version tagged as &lt;code&gt;latest&lt;/code&gt; on the package server.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;dependencies&lt;/code&gt; property also supports an advanced syntax that allows you to directly specify the dependency id and/or URI if necessary. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;dependencies&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hl7.fhir.us.core&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;uscore&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;uri&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;http&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;//hl7.org/fhir/us/core/ImplementationGuide/hl7.fhir.us.core&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3.1.0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SUSHI also supports &lt;a href=&#34;http://build.fhir.org/versions.html#extensions&#34;&gt;extensions for converting between versions of FHIR&lt;/a&gt;. To get extensions that represent elements from other versions of FHIR, a package of the form &lt;code&gt;hl7.fhir.extensions.&amp;lt;extension-version&amp;gt;:&amp;lt;package-version&amp;gt;&lt;/code&gt; is used. The &lt;code&gt;&amp;lt;extension-version&amp;gt;&lt;/code&gt; should be one of &lt;code&gt;r2&lt;/code&gt;, &lt;code&gt;r3&lt;/code&gt;, or &lt;code&gt;r4&lt;/code&gt; to indicate which version of FHIR the element represented by the extension is defined in. The &lt;code&gt;&amp;lt;package-version&amp;gt;&lt;/code&gt; represents which version of FHIR the extension will be used in. For an IG defined using FHIR R4, this would be &lt;code&gt;4.0.1&lt;/code&gt;. As an example, if an author wanted to represent the &lt;code&gt;Patient.animal.species&lt;/code&gt; &lt;a href=&#34;http://hl7.org/fhir/STU3/patient-definitions.html#Patient.animal.species&#34;&gt;element&lt;/a&gt; as defined in R3, the dependencies should be specified as:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;dependencies&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hl7.fhir.extensions.r3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4.0.1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;An author can then reference the extension using a URL following the format defined in the FHIR specification linked above. For example, the extension referring to the R3 &lt;code&gt;Patient.animal.species&lt;/code&gt; element would be: &lt;code&gt;http://hl7.org/fhir/3.0/StructureDefinition/extension-Patient.animal.species&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;fsh-and-ig-processing-full-configuration&#34;&gt;FSH and IG Processing: Full Configuration&lt;/h2&gt;
&lt;p&gt;The table below lists all configuration properties that can be used in SUSHI&amp;rsquo;s &lt;strong&gt;sushi-config.yaml&lt;/strong&gt; file. Most SUSHI configuration properties come directly from the &lt;a href=&#34;https://www.hl7.org/fhir/R4/implementationguide.html#resource&#34;&gt;Implementation Guide resource&lt;/a&gt; and will be translated into the generated ImplementationGuide resource for your project. Differences between the &lt;strong&gt;sushi-config.yaml&lt;/strong&gt; properties and ImplementationGuide properties are noted below.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Property&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Corresponding IG element&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Usage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;applyExtensionMetadataToRoot&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N/A&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;When set to true, the &amp;ldquo;short&amp;rdquo; and &amp;ldquo;definition&amp;rdquo; field on the root element of an Extension will be set to the &amp;ldquo;Title&amp;rdquo; and &amp;ldquo;Description&amp;rdquo; of that Extension. Default is true.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;canonical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N/A&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The canonical base URL to be used throughout the IG&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;contact&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;contact&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;contained&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;contained&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;copyright&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;copyright&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;copyrightLabel&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;copyrightLabel&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource - &lt;strong&gt;Note:&lt;/strong&gt; this is an R5 IG element&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;copyrightYear or copyrightyear&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N/A&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Used to add a &lt;code&gt;copyrightyear&lt;/code&gt; parameter to &lt;code&gt;IG.definition.parameter&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;date&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;date&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;definition &lt;br&gt; └ extension&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;definition.extension&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A list of extensions that apply to &lt;code&gt;IG.definition&lt;/code&gt;. &lt;strong&gt;Note:&lt;/strong&gt; the only property supported on the &lt;code&gt;definition&lt;/code&gt; property is &lt;code&gt;extension&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;description&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;description&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;dependencies&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;dependsOn&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A &lt;code&gt;key: value&lt;/code&gt; pair, where key is the package id and value is the version (or &lt;code&gt;dev&lt;/code&gt;/&lt;code&gt;current&lt;/code&gt;). For advanced use cases, the value can be an object with keys for &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;uri&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;, and &lt;code&gt;extension&lt;/code&gt;. For R5 IG resources, the key &lt;code&gt;reason&lt;/code&gt; can also be provided.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;experimental&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;experimental&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;extension&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;extension&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;fhirVersion&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;fhirVersion&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource. SUSHI supports FHIR versions in the R4 or R5 sequences, as given in the &lt;a href=&#34;http://hl7.org/fhir/directory.html&#34;&gt;FHIR Publication History&lt;/a&gt;. 5.0.0-snapshot1. Projects that wish to use a 5.0.0 pre-release can specify the version in their sushi-config.yaml file, e.g., &lt;code&gt;fhirVersion: 5.0.0-snapshot1&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;FSHOnly&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N/A&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;When this flag is set to &lt;code&gt;true&lt;/code&gt;, no IG-specific content will be generate. SUSHI will only convert FSH definitions to JSON files. The author at least needs to provide a &lt;code&gt;canonical&lt;/code&gt; and &lt;code&gt;fhirVersion&lt;/code&gt; for FSHOnly processing to succeed. When FSHOnly is false or unspecified, IG content is generated.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;global&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;global&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Key is the type and value is the profile&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;groups&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;definition.grouping&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A &lt;code&gt;key: value&lt;/code&gt; pair, where key is the group id and value is the description of the group. For advanced use cases, the value can be an object with keys for &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, and &lt;code&gt;resources&lt;/code&gt;. See the &lt;a href=&#34;#exhaustive-example&#34;&gt;Exhaustive Example&lt;/a&gt; for details.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;id&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;id&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;implicitRules&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;implicitRules&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;instanceOptions&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N/A&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;key: value&lt;/code&gt; pairs, where keys are &lt;code&gt;setId&lt;/code&gt;, &lt;code&gt;setMetaProfile&lt;/code&gt;, and &lt;code&gt;manualSliceOrdering&lt;/code&gt;. &lt;ul&gt;&lt;li&gt;The &lt;code&gt;setId&lt;/code&gt; value controls whether &lt;code&gt;id&lt;/code&gt; is set on generated instances. Options are &lt;code&gt;always&lt;/code&gt; (set &lt;code&gt;id&lt;/code&gt; on all instances [the default]) or &lt;code&gt;standalone-only&lt;/code&gt; (set &lt;code&gt;id&lt;/code&gt; for instances where the &lt;code&gt;Usage&lt;/code&gt; keyword is NOT &lt;code&gt;#inline&lt;/code&gt;).&lt;/li&gt;&lt;li&gt;The &lt;code&gt;setMetaProfile&lt;/code&gt; value controls whether &lt;code&gt;meta.profile&lt;/code&gt; is set on generated instances. It can have the following values: &lt;code&gt;always&lt;/code&gt; (set meta.profile for all instances [the default]), &lt;code&gt;never&lt;/code&gt; (do not set meta.profile on any instances), &lt;code&gt;inline-only&lt;/code&gt; (set &lt;code&gt;meta.profile&lt;/code&gt; only for instances of profiles with &lt;code&gt;Usage&lt;/code&gt; keyword set to &lt;code&gt;#inline&lt;/code&gt;), or &lt;code&gt;standalone-only&lt;/code&gt; (set &lt;code&gt;meta.profile&lt;/code&gt; for instances where the &lt;code&gt;Usage&lt;/code&gt; keyword is NOT &lt;code&gt;#inline&lt;/code&gt;).&lt;/li&gt;&lt;li&gt;The &lt;code&gt;manualSliceOrdering&lt;/code&gt; value controls whether slice ordering is determined exclusively by the order in which slices are referenced in an instance&amp;rsquo;s FSH rules. When this flag is set to &lt;code&gt;true&lt;/code&gt;, manual ordering is enabled (see &lt;a href=&#34;https://fshschool.org/docs/sushi/tips/#manual-slice-ordering&#34;&gt;Manual Slice Ordering&lt;/a&gt;).&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;jurisdiction&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;jurisdiction&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;language&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;language&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;license&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;license&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;menu&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N/A&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Used to generate the &lt;code&gt;fsh-generated/includes/menu.xml&lt;/code&gt; file. The key is the menu item name and the value is the URL. Menus can contain sub-menus, but the IG Publisher currently only supports sub-menus one level deep. See the &lt;a href=&#34;#exhaustive-example&#34;&gt;Exhaustive Example&lt;/a&gt; for details. Authors can provide their own &lt;code&gt;menu.xml&lt;/code&gt; by removing this property and placing a &lt;code&gt;menu.xml&lt;/code&gt; file in &lt;code&gt;/input/includes&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;meta&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;meta&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;modifierExtension&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;modifierExtension&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;name&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;name&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;packageId&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;packageId&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource. If unspecified, defaults to &lt;code&gt;id&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;pages&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;definition.page&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SUSHI can auto-generate pages, but authors can manage pages through this property. If this property is used, SUSHI will not generate any page entries. The YAML key is the file name containing the page. The title key-value pair provides the title for the page. If a title is not provided, then the title will be generated from the file name. If a generation value (corresponding to definition.page.generation) is not provided, it will be inferred from the file name extension. In the IG resource, pages can contain sub-pages; so in the config file, any sub-properties that are valid filenames with supported extensions (e.g., .md/.xml) will be treated as sub-pages. See the &lt;a href=&#34;#exhaustive-example&#34;&gt;Exhaustive Example&lt;/a&gt; for details.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;parameters&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;definition.parameter&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Consists of key-value pairs where the keys are values of &lt;code&gt;definition.parameter.code&lt;/code&gt;. For R5 IG resources, the key can be a FSH code that specifies the &lt;code&gt;code&lt;/code&gt; and &lt;code&gt;system&lt;/code&gt; values of &lt;code&gt;definition.parameter.code&lt;/code&gt;, which is a Coding. See the &lt;a href=&#34;#exhaustive-example&#34;&gt;Exhaustive Example&lt;/a&gt; for details. If a parameter allows repeating values, the value in the YAML may be a sequence/array. For example, the &lt;code&gt;path-resource&lt;/code&gt; parameter specifies relative paths to additional folders that contain predefined resources (see &lt;a href=&#34;https://fshschool.org/docs/sushi/tips/#specifying-additional-resource-paths&#34;&gt;Specifying Additional Resource Paths&lt;/a&gt;).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;publisher&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;publisher, with cardinality changed to 0..*&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Publisher can be a single item or a list, each with a name and optional url and/or email. The first publisher&amp;rsquo;s name will be used as IG.publisher.  The contact details and/or additional publishers will be translated into IG.contact values&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;releaseLabel or releaselabel&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N/A&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Used to add a &lt;code&gt;releaseLabel&lt;/code&gt; parameter to &lt;code&gt;IG.definition.parameter&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;resources&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;definition.resource&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SUSHI can auto-generate a list of resources based on FSH definitions and provided JSON or XML resources, but this property can be used to add additional entries or override generated entries. SUSHI uses the {resource type}/{resource name} format as the YAML key (corresponding to IG.definition.resource.reference). Authors can specify the value &amp;ldquo;omit&amp;rdquo; to omit a FSH-generated resource from the resource list. &lt;code&gt;groupingId&lt;/code&gt; can be used, but top-level groups syntax may be a better option.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;status&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;status&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;templates&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;definition.template&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;text&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;text&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;title&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;title&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;url&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;url&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource. If unspecified, defaults to &lt;code&gt;{canonical}/ImplementationGuide/{id}&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;useContext&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;useContext&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;version&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;version&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;versionAlgorithmString&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;versionAlgorithm[x]&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource - &lt;strong&gt;Note:&lt;/strong&gt; this is an R5 IG element&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;versionAlgorithmCoding&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;versionAlgorithm[x]&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;As specified in the IG resource - &lt;strong&gt;Note:&lt;/strong&gt; this is an R5 IG element&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;exhaustive-example&#34;&gt;Exhaustive Example&lt;/h2&gt;
&lt;p&gt;The following provides an exhaustive example &lt;strong&gt;sushi-config.yaml&lt;/strong&gt; covering many of the properties discussed above.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# This IG YML file is inspired by the ImplementationGuide resource&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# and also draws from package.json, package-list.json, and ig.ini.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# That said, it is structured for ease-of-use, so it is not strictly&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# conformant to any of those existing configuration formats.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# SUSHI will use id as both id and packageId in the IG unless a&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# specific packageId is also provided in this file.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;fhir.us.example&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;canonical&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;http&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;//hl7.org/fhir/us/example&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;http&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;//hl7.org/fhir/us/example/ImplementationGuide/fhir.us.example&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;ExampleIG&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;HL7 FHIR Implementation Guide: Example IG Release 1 - US Realm | STU1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;description&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Example&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;IG&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;exercises&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;many&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;of&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;the&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;fields&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;in&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;a&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;SUSHI&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;configuration.&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;status&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;active&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;license&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;CC0&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;-1.0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;date&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;2020-02-26&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1.0.0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Although fhirVersions is 0..* in the ImplementationGuide resource&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# it can be a single item OR and array here (but so far SUSHI only&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# supports 4.0.1 anyway).&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fhirVersion&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4.0.1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# The following two lines correspond to items that used to be in&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# ig.ini but were moved to IG.definition.parameter. For&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# consistency within this file, the names are represented using&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# camelcase, but if authors use the formal parameter names, SUSHI&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# will recognize them as well. In either case, they&amp;#39;ll be copied&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# to the IG JSON using the formal names.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;copyrightYear&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2019&lt;/span&gt;+&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;releaseLabel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;STU1&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# The publisher can be a single item or a list, each with a name and&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# optional url and/or email. The first publisher&amp;#39;s name will be used&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# as IG.publisher.  The contact details and/or additional publishers&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# will be translated into IG.contact values.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;publisher&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;HL7&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;FHIR&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Management&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Group&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;http&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;//www.hl7.org/Special/committees/fhirmg&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;email&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;fmg@lists.HL7.org&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Those who need more control or want to add additional details to the contact values can use&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# contact directly and follow the format outlined in the ImplementationGuide resource and&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# ContactDetail.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;contact&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Bob&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Smith&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;telecom&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;system&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;email&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;bobsmith@example.org&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;use&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;work&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# The jurisdiction can be a single item or a list. The FHIR Shorthand&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# code syntax can be used here.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;jurisdiction&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;urn&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;iso&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;std&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;iso&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3166&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#US &amp;#34;United States of America&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# The dependencies property corresponds to IG.dependsOn. The key is the&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# package id and the value is the version (or dev/current). For advanced&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# use cases, the value can be an object with keys for `uri` and `version`.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# For R5 ImplementationGuides, the object can also have a key for `reason`.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;dependencies&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hl7.fhir.us.core&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3.1.0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hl7.fhir.us.mcode&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;mcode&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;uri&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;http&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;//hl7.org/fhir/us/mcode/ImplementationGuide/hl7.fhir.us.mcode&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1.0.0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# The global property corresponds to the IG.global property, but it&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# uses the type as the YAML key and the profile as its value. Since&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# FHIR does not explicitly disallow more than one profile per type,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# neither do we; the value can be a single profile URL or an array&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# of profile URLs.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;global&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Patient&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;http&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;//example.org/fhir/StructureDefinition/my-patient-profile&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Encounter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;http&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;//example.org/fhir/StructureDefinition/my-encounter-profile&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# NOTE: All of the properties of IG.definition are abstracted to&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# individual top-level configuration properties (below). This&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# definition property should only be used to provide extensions&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# that have a context of IG.definition.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;definition&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;extension&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;http&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;//example.org/example/ig-definition-ext&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;valueBoolean&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# The resources property corresponds to IG.definition.resource.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# SUSHI can auto-generate all of the resource entries based on&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# the FSH definitions and/or information in any user-provided&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# JSON or XML resource files. If the generated entries are not&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# sufficient or complete, however, the author can add entries&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# here. If a generated entry matches the reference, it will&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# not be added to SUSHI output. The format follows IG.definition.resource&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# with the following differences:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#   * use IG.definition.resource.reference.reference as the YAML key&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#   * specify &amp;#34;omit&amp;#34; to omit a FSH-generated resource from the&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#     resource list.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#   * groupingId can be used, but top-level groups syntax may be a&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#     better option (see below).&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# The following are simple examples to demonstrate what this might&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# look like:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;resources&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Patient/my-example-patient&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;My&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Example&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Patient&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;description&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;An&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;example&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Patient&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;exampleBoolean&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Patient/bad-example&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;omit&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# For R5 ImplementationGuides, the example[x] property was replaced&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# with isExample. A profile property is also included. These can be&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# specified directly in configuration. Profile can be a single item&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# or an array.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# An example resources configuration for an R5 ImplementationGuide:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# resources:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#   Patient/my-example-patient:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#     name: My Example Patient&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#     description: An example Patient&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#     isExample: true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#     profile: http://example.org/fhir/StructureDefinition/my-patient-profile&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Groups can control certain aspects of the IG generation.  The IG&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# documentation recommends that authors use the default groups that&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# are provided by the templating framework, but if authors want to&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# use their own instead, they can use the mechanism below.  This will&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# create IG.definition.grouping entries and associate the individual&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# resource entries with the corresponding groupIds.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;groups&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GroupA&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Group&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;A&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;description&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;The&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Alpha&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Group&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;resources&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- StructureDefinition/animal-patient&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- StructureDefinition/arm-procedure&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GroupB&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Group&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;B&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;description&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;The&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Beta&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Group&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;resources&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- StructureDefinition/bark-control&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- StructureDefinition/bee-sting&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# The pages property corresponds to IG.definition.page. SUSHI can&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# auto-generate the page list, but if the author includes pages in&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# this file, it is assumed that the author will fully manage the&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# pages section and SUSHI will not generate any page entries.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# The page file name is used as the key. If title is not provided,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# then the title will be generated from the file name.  If a&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# generation value is not provided, it will be inferred from the&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# file name extension.  Any subproperties that are valid filenames&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# with supported extensions (e.g., .md/.xml) will be treated as&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# sub-pages.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# For R5 ImplementationGuides, the IG.definition.page element now&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# supports a source[x] element. SUSHI will generate sourceUrl&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# based on the name if it is not provided. To provide a source,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# add a key/value pair subproperty with the type slice as the key.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pages&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;index.md&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Example&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Home&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;implementation.xml&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;examples.xml&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Examples&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Overview&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;simpleExamples.xml&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;complexExamples.xml&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# The ImplementationGuide resource defines several other properties&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# not represented above. These properties can be used as-is and&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# should follow the format defined in ImplementationGuide:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# * meta&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# * implicitRules&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# * language&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# * text&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# * contained&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# * extension&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# * modifierExtension&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# * experimental&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# * useContext&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# * copyright&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# * packageId&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# The R5 ImplementationGuide resource defines additional properties&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# not represented above. These properties can be used as-is and&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# should follow the format defined in ImplementationGuide:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# * copyrightLabel&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# * versionAlgorithm[x], which should be specified with the type slice (e.g. versionAlgorithmString)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# The menu property will be used to generate the input/menu.xml file.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# The menu is represented as a simple structure where the YAML key&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# is the menu item name and the value is the URL. The IG publisher&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# currently only supports one level deep on sub-menus.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# To provide a custom menu.xml file, do not include this property and&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# include a `menu.xml` file in input/includes.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;menu&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Home&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;index.html&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Artifacts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Profiles&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;artifacts.html&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Extensions&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;artifacts.html&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#3&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Value Sets&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;artifacts.html&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#4&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Downloads&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;downloads.html&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;History&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;http&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;//hl7.org/fhir/us/example/history.html&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# The parameters property represents IG.definition.parameter. Rather&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# than a list of code/value pairs (as in the ImplementationGuide&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# resource), the code is the YAML key. If a parameter allows repeating&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# values, the value in the YAML should be a sequence/array. For parameters&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# defined by core FHIR see: http://build.fhir.org/codesystem-guide-parameter-code.html.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# For parameters defined by the FHIR Tools IG  see:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# http://build.fhir.org/ig/FHIR/fhir-tools-ig/branches/master/CodeSystem-ig-parameters.html&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;parameters&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;excludettl&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;validation&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;allow-any-extensions&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;no-broken-links&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;show-inherited-invariants&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# For R5 ImplementationGuides, the IG.definition.parameter.code became a Coding.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# In this case, the YAML key becomes the code.code. If the code provided is in the&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# value set bound in the IG definition (see: http://hl7.org/fhir/2022Sep/valueset-guide-parameter-code.html),&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# that system is automatically set. If no system is provided, SUSHI will default the system&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# to the system for the IG Parameter Codes&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# (see: http://build.fhir.org/ig/FHIR/fhir-tools-ig/branches/master/CodeSystem-ig-parameters.html).&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# To use a different system, the YAML key can be a FSH code.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# An example parameters configuration for an R5 ImplementationGuide:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# parameters:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#   generate-xml: true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#   validation: [allow-any-extensions, no-broken-links]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#   http://example.org/fhir/other-system#example: false&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# The FSHOnly flag indicates if only FSH resources should be exported.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# If set to true, no IG related content will be generated.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# The default value for this property is false.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FSHOnly&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# When set to true, the &amp;#34;short&amp;#34; and &amp;#34;definition&amp;#34; field on the root element of an Extension will&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# be set to the &amp;#34;Title&amp;#34; and &amp;#34;Description&amp;#34; of that Extension. Default is true.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;applyExtensionMetadataToRoot&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# The instanceOptions property is used to configure certain aspects of how SUSHI processed instances.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# See the individual option definitions below for more detail.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;instanceOptions&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Determines for which types of Instances SUSHI will automatically set meta.profile&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# if InstanceOf references a profile. Options are:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# - always: Set meta.profile for all Instances of profiles (default)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# - never: Do not set meta.profile on any Instances&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# - inline-only: Set meta.profile for only Instances of profiles with Usage set to #inline&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# - standalone-only: Set meta.profile for only Instances of profiles where Usage is any value other than #inline&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;setMetaProfile&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;always&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Determines for which types of Instances SUSHI will automatically set id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# if InstanceOf references a profile. Options are:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# - always: Set id for all Instances (default)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# - standalone-only: Set id for only Instances where Usage is any value other than #inline&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;setId&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;always&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# When set to true, slices must be referred to by name and not only by a numeric index in order to be used&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# in an Instance&amp;#39;s assignment rule. All slices appear in the order in which they are specified in FSH rules.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;manualSliceOrdering&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://fshschool.org/docs/sushi/configuration/exhaustive-config.yaml&#34;&gt;&lt;i class=&#39;fas fa-download fa-fw&#39;&gt;&lt;/i&gt; Download Exhaustive Configuration Example&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Running SUSHI</title>
      <link>https://fshschool.org/docs/sushi/running/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fshschool.org/docs/sushi/running/</guid>
      <description>
        
        
        

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
This documentation assumes you have a SUSHI-compliant project structure and configuration as discussed in the previous sections.
&lt;/div&gt;

&lt;h2 id=&#34;running-sushi&#34;&gt;Running SUSHI&lt;/h2&gt;
&lt;p&gt;SUSHI is executed from the command line. The general form of the SUSHI execution command is as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;i class=&#34;fas fa-dollar-sign&#34;&gt;&lt;/i&gt; sushi &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;command&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;options&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Supported commands are &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;init&lt;/code&gt;, &lt;code&gt;update-dependencies&lt;/code&gt;, and &lt;code&gt;help&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;sushi --version&lt;/code&gt; to get basic information about the current SUSHI version. Use &lt;code&gt;sushi help&lt;/code&gt; to get basic information about SUSHI, and use &lt;code&gt;sushi help {command}&lt;/code&gt; to get information about a specific command and its options (e.g., &lt;code&gt;sushi help build&lt;/code&gt;).&lt;/p&gt;
&lt;h3 id=&#34;sushi-commands&#34;&gt;SUSHI Commands&lt;/h3&gt;
&lt;p&gt;SUSHI provides various commands to use with FSH projects. The following sections provide more details on each.&lt;/p&gt;
&lt;h4 id=&#34;build&#34;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;build&lt;/code&gt; command is used to build a SUSHI project. In SUSHI 2.x, it is the default command and can be used as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;i class=&#34;fas fa-dollar-sign&#34;&gt;&lt;/i&gt; sushi build &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;fsh-project-directory&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;options&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;where options include the following (in any order):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;-l, --log-level &amp;lt;level&amp;gt;  specify the level of log messages (default: &amp;#34;info&amp;#34;) (choices: &amp;#34;error&amp;#34;, &amp;#34;warn&amp;#34;, &amp;#34;info&amp;#34;, &amp;#34;debug&amp;#34;)
-o, --out &amp;lt;out&amp;gt;          the path to the output folder (default: &amp;#34;fsh-generated&amp;#34;)
-p, --preprocessed       output FSH produced by preprocessing steps
-r, --require-latest     exit with error if this is not the latest version of SUSHI (default: false)
-s, --snapshot           generate snapshot in Structure Definition output (default: false)
-c, --config &amp;lt;config&amp;gt;    override elements in sushi-config.yaml (supported: &amp;#39;version&amp;#39;, &amp;#39;status&amp;#39;, &amp;#39;releaselabel&amp;#39;) (eg: --config status:draft)
-h, --help               display help for command
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Further information about each option can be found in &lt;a href=&#34;#build-command-option-details&#34;&gt;Build Command Option Details&lt;/a&gt;.&lt;/p&gt;


&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;
If you run SUSHI from your FSH project directory, and accept the defaults, the command can be shortened to &lt;code&gt;sushi build .&lt;/code&gt; or simply &lt;code&gt;sushi build&lt;/code&gt;.
&lt;/div&gt;

&lt;h4 id=&#34;init&#34;&gt;&lt;code&gt;init&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;init&lt;/code&gt; command is used to generate a project structure that is compatible with the FHIR IG Publisher. In SUSHI 2.x, it can be used as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;i class=&#34;fas fa-dollar-sign&#34;&gt;&lt;/i&gt; sushi init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Further details on how to use this command can be found in &lt;a href=&#34;https://fshschool.org/docs/sushi/project/#initializing-a-sushi-project&#34;&gt;Initializing a SUSHI Project&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;update-dependencies&#34;&gt;&lt;code&gt;update-dependencies&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;update-dependencies&lt;/code&gt; command is used to update the FSH project&amp;rsquo;s dependencies to the latest version. The command will check all dependencies defined in the &lt;code&gt;sushi-config.yaml&lt;/code&gt; file to see if they are at the latest published version. SUSHI will output a list of all dependencies that have later versions and prompt the author whether to update. Choosing to update will directly modify the &lt;code&gt;sushi-config.yaml&lt;/code&gt; file with the latest version and download the latest version of the dependency to the FHIR cache. Any dependency with a &lt;code&gt;current&lt;/code&gt; or &lt;code&gt;dev&lt;/code&gt; version will not be modified. This command can be used as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;i class=&#34;fas fa-dollar-sign&#34;&gt;&lt;/i&gt; sushi update-dependencies &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;fsh-project-directory&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;build-command-option-details&#34;&gt;Build Command Option Details&lt;/h3&gt;
&lt;p&gt;The following sections give further detail on using certain command line options.&lt;/p&gt;
&lt;h3 id=&#34;--out&#34;&gt;&lt;code&gt;--out&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;--out&lt;/code&gt; or &lt;code&gt;-o&lt;/code&gt; flag specifies where SUSHI&amp;rsquo;s output, the &lt;strong&gt;fsh-generated&lt;/strong&gt; folder, should be written. By default, the folder will be written to the root folder, i.e., parallel to the &lt;strong&gt;input&lt;/strong&gt; folder. When SUSHI begins, any existing content in the designated location is deleted. Within the &lt;strong&gt;fsh-generated&lt;/strong&gt; folder, SUSHI generates file names based on the resource id (i.e., ${resourceType}-${resourceId}.json). If the id contains one or more path separators, SUSHI will sanitize file names to assure all files are written to the target directory. (&lt;em&gt;Note: the &lt;code&gt;--out&lt;/code&gt; option does not refer to the output folder written by the IG Publisher&lt;/em&gt;).&lt;/p&gt;
&lt;h3 id=&#34;--preprocessed&#34;&gt;&lt;code&gt;--preprocessed&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;--preprocessed&lt;/code&gt; or &lt;code&gt;-p&lt;/code&gt; flag can be used to to create a folder named &lt;strong&gt;_preprocessed&lt;/strong&gt; in SUSHI&amp;rsquo;s output folder. This folder will contain representations of the input FSH after several preprocessing steps have taken place. These steps include resolution of &lt;a href=&#34;http://build.fhir.org/ig/HL7/fhir-shorthand/branches/master/reference.html#defining-aliases&#34;&gt;&lt;code&gt;Alias&lt;/code&gt; values&lt;/a&gt;, insertion of &lt;a href=&#34;http://build.fhir.org/ig/HL7/fhir-shorthand/branches/master/reference.html#defining-rule-sets&#34;&gt;&lt;code&gt;RuleSet&lt;/code&gt; rules&lt;/a&gt;, and resolution of &lt;a href=&#34;http://build.fhir.org/ig/HL7/fhir-shorthand/branches/master/reference.html#soft-indexing&#34;&gt;soft indexing&lt;/a&gt;. This is mainly provided as a debugging tool, for the author to verify that SUSHI is preprocessing the input FSH in an expected way, and to help trace errors in the output of SUSHI back to their source. For example, if the IG Publisher reports an error on element Bundle.entry[56].resource, it may be difficult to identify the problematic entry in your FSH source if you used soft-indexing. It is much easier, however, to identify the problematic element in the preprocessed FSH that contains explicit indices.&lt;/p&gt;
&lt;p&gt;The example below shows a FSH snippet and a preprocessed version of that snippet. In this snippet, a &lt;code&gt;Profile&lt;/code&gt; is defined using a &lt;code&gt;RuleSet&lt;/code&gt; and an &lt;code&gt;Alias&lt;/code&gt;, and below an &lt;code&gt;Instance&lt;/code&gt; is defined which uses soft indexing.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Alias: $CAT = http://hl7.org/fhir/ValueSet/observation-category

Profile: ObservationProfile
Parent: Observation
* insert Metadata
* category from $CAT (required)

RuleSet: Metadata
* ^version = &amp;quot;1.2.3&amp;quot;
* ^publisher = &amp;quot;Example publisher&amp;quot;

Instance: PatientInstance
InstanceOf: Patient
* name.given[+] = &amp;quot;John&amp;quot;
* name.given[+] = &amp;quot;Q&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The preprocessed version of the above FSH is shown below. The &lt;code&gt;$CAT&lt;/code&gt; alias has been resolved to its full URL, the rules contained in the &lt;code&gt;RuleSet&lt;/code&gt; have been inserted onto the &lt;code&gt;ObservationProfile&lt;/code&gt;, and the &lt;code&gt;RuleSet&lt;/code&gt; itself has been removed, and the rules on the &lt;code&gt;PatientInstance&lt;/code&gt; have been resolved to fully specified paths, which do not use soft indexing.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Alias: $CAT = http://hl7.org/fhir/ValueSet/observation-category

// Originally defined on lines 3 - 6
Profile: ObservationProfile
Parent: Observation
Id: ObservationProfile
* ^version = &amp;quot;1.2.3&amp;quot;
* ^publisher = &amp;quot;Example publisher&amp;quot;
* category from http://hl7.org/fhir/ValueSet/observation-category (required)

// Originally defined on lines 12 - 15
Instance: PatientInstance
InstanceOf: Patient
Usage: #example
* name.given[0] = &amp;quot;John&amp;quot;
* name.given[1] = &amp;quot;Q&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
Once you have finished reviewing your preprocessed FSH, we recommend deleting the &lt;strong&gt;_preprocessed&lt;/strong&gt; folder to avoid potential confusion related to multiple versions of FSH files in your project. For this same reason, we do not recommend committing your preprocessed FSH to source control.
&lt;/div&gt;

&lt;h3 id=&#34;--snapshot&#34;&gt;&lt;code&gt;--snapshot&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;By default, SUSHI only generates the &lt;a href=&#34;https://www.hl7.org/fhir/R4/profiling.html#snapshot&#34;&gt;profile differential&lt;/a&gt;, allowing the IG Publisher to create the &lt;a href=&#34;https://www.hl7.org/fhir/R4/profiling.html#snapshot&#34;&gt;profile snapshot&lt;/a&gt;. This is the approach recommended by HL7 FHIR leadership. If authors prefer, the &lt;code&gt;--snapshot&lt;/code&gt; (or &lt;code&gt;-s&lt;/code&gt;) option can be used to cause SUSHI to generate the snapshot without having to run the IG Publisher.&lt;/p&gt;
&lt;h3 id=&#34;--config&#34;&gt;&lt;code&gt;--config&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Typically, SUSHI uses the &lt;code&gt;sushi-config.yaml&lt;/code&gt; file to define the configuration options it uses when processing FSH. However, in rare cases, it may be useful to override the values provided in &lt;code&gt;sushi-config.yaml&lt;/code&gt; without changing the file itself. For these cases, the &lt;code&gt;--config&lt;/code&gt; (or &lt;code&gt;-c&lt;/code&gt;) option can be used to specify a configuration property and the override value for it. Currently, this option only allows &lt;code&gt;version&lt;/code&gt;, &lt;code&gt;status&lt;/code&gt;, and &lt;code&gt;releaselabel&lt;/code&gt; to be overridden.&lt;/p&gt;
&lt;p&gt;For example, specifying &lt;code&gt;sushi build . --config status:active&lt;/code&gt; can be used to specify that the status should be &amp;ldquo;active&amp;rdquo; for that particular build of SUSHI.&lt;/p&gt;
&lt;h2 id=&#34;status-messages&#34;&gt;Status Messages&lt;/h2&gt;
&lt;p&gt;While SUSHI is running, it will print status messages as it processes your project files. When SUSHI has completed, you should receive a summary like the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;╔════════════════════════ SUSHI RESULTS ══════════════════════════╗
║ ╭───────────────┬──────────────┬──────────────┬───────────────╮ ║
║ │    Profiles   │  Extensions  │   Logicals   │   Resources   │ ║
║ ├───────────────┼──────────────┼──────────────┼───────────────┤ ║
║ │       1       │      1       │      1       │       1       │ ║
║ ╰───────────────┴──────────────┴──────────────┴───────────────╯ ║
║ ╭────────────────────┬───────────────────┬────────────────────╮ ║
║ │      ValueSets     │    CodeSystems    │     Instances      │ ║
║ ├────────────────────┼───────────────────┼────────────────────┤ ║
║ │         1          │         1         │         1          │ ║
║ ╰────────────────────┴───────────────────┴────────────────────╯ ║
║                                                                 ║
╠═════════════════════════════════════════════════════════════════╣
║ Fin-tastic job!                        0 Errors      0 Warnings ║
╚═════════════════════════════════════════════════════════════════╝
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
The following message is expected, and should be ignored:(node:46420) Warning: Accessing non-existent property &amp;lsquo;INVALID_ALT_NUMBER&amp;rsquo; of module exports inside circular dependency (Use &lt;code&gt;node --trace-warnings ...&lt;/code&gt; to show where the warning was created)
&lt;/div&gt;

&lt;h2 id=&#34;error-messages&#34;&gt;Error Messages&lt;/h2&gt;
&lt;p&gt;In the process of developing your IG using FSH, you may encounter SUSHI error messages (written to the command console). Most error messages point to a specific line or lines in a &lt;code&gt;.fsh&lt;/code&gt; file. If possible, SUSHI will continue, despite errors, to produce FHIR artifacts, but those artifacts may omit problematic rules. SUSHI should always exit gracefully. If SUSHI crashes, please report the issue using the &lt;a href=&#34;https://github.com/FHIR/sushi/issues&#34;&gt;SUSHI issue tracker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are some general tips for debugging:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Parsing (syntax) errors should be fixed first.&lt;/strong&gt; A single syntax error can balloon into many other errors, so you should always eliminate syntax errors first. Syntax error messages may include &lt;code&gt;extraneous input {x} expecting {y}&lt;/code&gt;, &lt;code&gt;mismatched input {x} expecting {y}&lt;/code&gt; and &lt;code&gt;no viable alternative at {x}&lt;/code&gt;. These messages indicate that the line in question is not a valid FSH statement.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The order of keywords matters.&lt;/strong&gt; The declarations must start with the type of item you are creating (e.g., Profile, Instance, ValueSet).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The order of rules usually doesn&amp;rsquo;t matter, but there are exceptions.&lt;/strong&gt; Slices and extensions must be created before they are constrained.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rules must contain valid paths.&lt;/strong&gt; The &lt;code&gt;No element found at path&lt;/code&gt; error means that although the overall grammar of the rule may be correct, SUSHI could not find the FHIR element you are referring to in the rule. Make sure there are no spelling errors, the element names in the path are correct, and you are using the &lt;a href=&#34;https://build.fhir.org/ig/HL7/fhir-shorthand/reference.html#fsh-paths&#34;&gt;path grammar&lt;/a&gt; correctly.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The community can help.&lt;/strong&gt; If you are getting an error you can&amp;rsquo;t resolve, you can ask for help on the &lt;a href=&#34;https://chat.fhir.org/#narrow/stream/215610-shorthand&#34;&gt;#shorthand chat channel&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;structure-definition-is-missing-snapshot-error&#34;&gt;Structure Definition is Missing Snapshot Error&lt;/h3&gt;
&lt;p&gt;Some non-HL7 FHIR packages are distributed without snapshot elements in their profiles. If your IG uses one of these profiles, SUSHI will report an error like the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Structure Definition &lt;a href=&#34;http://fhir.de/StructureDefinition/observation-de-vitalsign&#34;&gt;http://fhir.de/StructureDefinition/observation-de-vitalsign&lt;/a&gt; is missing snapshot. Snapshot is required for import.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Since SUSHI does not implement its own snapshot generator, you must update the package in your FHIR cache so that its profiles include snapshot elements. Fortunately, the &lt;a href=&#34;https://fire.ly/products/firely-terminal/&#34;&gt;Firely Terminal&lt;/a&gt; provides a way to do this.&lt;/p&gt;
&lt;p&gt;First, you must &lt;a href=&#34;https://docs.fire.ly/projects/Firely-Terminal/getting_started/InstallingFirelyTerminal.html&#34;&gt;install Firely Terminal&lt;/a&gt;. Then use Firely Terminal to populate the snapshot elements in the dependency package.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Run the command: &lt;code&gt;fhir inflate --package  &amp;lt;packagename&amp;gt;&lt;/code&gt;, substituting the dependency package ID for &lt;code&gt;&amp;lt;packagename&amp;gt;&lt;/code&gt;.
&lt;ul&gt;
&lt;li&gt;E.g., &lt;code&gt;fhir inflate --package de.basisprofil.r4&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Run SUSHI again. The error about missing snapshots should no longer be displayed.&lt;/li&gt;
&lt;/ol&gt;


&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;
You can see a list of the available Firely Terminal versions &lt;a href=&#34;https://www.nuget.org/packages/Firely.Terminal#versions-body-tab&#34;&gt;here&lt;/a&gt;. Version 3.1.0 or higher is required to use the &lt;code&gt;inflate&lt;/code&gt; command. Versions prior to 3.1.0 offer similar functionality via a &lt;code&gt;bake&lt;/code&gt; command, but they are no longer recommended.
&lt;/div&gt;



&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Firely Terminal Note&lt;/h4&gt;
&lt;p&gt;Inflating a single package, as described above with &lt;code&gt;fhir inflate --package  &amp;lt;packagename&amp;gt;&lt;/code&gt;, is a free option in Firely Terminal. Alternately, authors can use &lt;code&gt;fhir install &amp;lt;packagename&amp;gt;&lt;/code&gt; to download, install, and automatically &amp;ldquo;inflate&amp;rdquo; the package. Using &lt;code&gt;fhir inflate&lt;/code&gt; as a bulk option to inflate the current project and all its dependencies, however, requires a Simplifier license.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://docs.fire.ly/projects/Firely-Terminal/Managing-Packages.html&#34; target=&#34;_blank&#34;&gt;Package Management section&lt;/a&gt;  of the Firely Terminal documentation provides additional details.&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;sushi-outputs&#34;&gt;SUSHI Outputs&lt;/h2&gt;
&lt;p&gt;Based on the inputs in FSH files, &lt;strong&gt;sushi-config.yaml&lt;/strong&gt;, and the IG project directory, SUSHI populates the &lt;strong&gt;fsh-generated&lt;/strong&gt; directory. For example, running SUSHI on the my-project project from the &lt;a href=&#34;https://fshschool.org/docs/sushi/project/&#34;&gt;Project Structure&lt;/a&gt; section would add a &lt;strong&gt;fsh-generated&lt;/strong&gt; folder as shown below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;my-project
├── fsh-generated
|   └── resources
|       ├── CodeSystem-myCodeSystem.json
|       ├── Patient-myPatient-example.json
|       ├── StructureDefinition-myExtension.json
|       ├── StructureDefinition-myProfile.json
|       ├── ValueSet-myValueSet.json
|       └── ImplementationGuide-myIG.json
├── ig.ini
├── input
|   ├── fsh
│   |   └── (fsh files)
│   ├── ignoreWarnings.txt
│   ├── images
│   │   ├── myDocument.pdf
│   │   ├── myGraphic.png
│   │   └── mySpreadsheet.xlsx
│   ├── includes
│   │   └── menu.xml
│   ├── pagecontent
│   │   ├── index.md
│   │   ├── 2_mySecondPage.md
│   │   ├── 3_myThirdPage.md
│   │   └── 4_myFourthPage.md
├── package-list.json
└── sushi-config.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SUSHI creates only the &lt;strong&gt;fsh-generated&lt;/strong&gt; folder, but some of the files shown above are either processed by SUSHI to create the &lt;strong&gt;ImplementationGuide.json&lt;/strong&gt; file, or &lt;em&gt;can&lt;/em&gt; be generated by SUSHI if the author wishes. See the breakdown of files and directories below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;fsh-generated*&lt;/strong&gt;: Generated from the definitions in the &lt;strong&gt;input/fsh/*.fsh&lt;/strong&gt; files.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ig.ini&lt;/strong&gt;: Specified by the author and unchanged by SUSHI.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;input/ignoreWarnings.txt&lt;/strong&gt;: Specified by the author and unchanged by SUSHI.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;input/images/*&lt;/strong&gt;: Specified by the author and unchanged by SUSHI.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;input/includes/menu.xml&lt;/strong&gt;: Specified by the author and unchanged by SUSHI, but can alternately be specified via the &lt;code&gt;menu&lt;/code&gt; property in &lt;strong&gt;sushi-config.yaml&lt;/strong&gt;. If the &lt;code&gt;menu&lt;/code&gt; configuration property is used, the output is generated to &lt;strong&gt;fsh-generated/includes/menu.xml&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;input/pagecontent/*&lt;/strong&gt;: Specified by the author, numeric prefixes are used by SUSHI in generating the &lt;strong&gt;ImplementationGuide-myIG.json&lt;/strong&gt; file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;package-list.json&lt;/strong&gt;: Specified by the author and unchanged by SUSHI.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;downloading-the-ig-publisher-scripts&#34;&gt;Downloading the IG Publisher Scripts&lt;/h3&gt;
&lt;p&gt;To run the IG Publisher, we recommend downloading the &lt;strong&gt;_updatePublisher.bat|sh&lt;/strong&gt; and &lt;strong&gt;_genonce.bat|sh&lt;/strong&gt; scripts provided by the sample-ig project. To get these scripts, &lt;a href=&#34;https://github.com/FHIR/sample-ig/archive/master.zip&#34;&gt;download the sample-ig project&lt;/a&gt;, unzip it, and copy &lt;em&gt;all&lt;/em&gt; of the &lt;strong&gt;.bat&lt;/strong&gt; and &lt;strong&gt;.sh&lt;/strong&gt; files to the directory above the &lt;strong&gt;fsh-generated&lt;/strong&gt; directory (&lt;strong&gt;my-project&lt;/strong&gt; in the example above).&lt;/p&gt;
&lt;p&gt;If you used &lt;code&gt;sushi init&lt;/code&gt; then these scripts were already downloaded and added to your project.&lt;/p&gt;
&lt;h3 id=&#34;downloading-the-ig-publisher&#34;&gt;Downloading the IG Publisher&lt;/h3&gt;
&lt;p&gt;After copying these, change directories in the command prompt to the directory above the &lt;strong&gt;fsh-generated&lt;/strong&gt; directory. At the command prompt, enter:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;i class=&#39;fab fa-windows fa-fw&#39;&gt;&lt;/i&gt; &lt;i class=&#34;fas fa-dollar-sign&#34;&gt;&lt;/i&gt; _updatePublisher
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;i class=&#39;fab fa-apple fa-fw&#39;&gt;&lt;/i&gt; &lt;i class=&#34;fas fa-dollar-sign&#34;&gt;&lt;/i&gt; ./_updatePublisher.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will download the latest version of the HL7 FHIR IG Publisher tool into the &lt;strong&gt;/input-cache&lt;/strong&gt; directory. &lt;em&gt;This step can be skipped if you already have the latest version of the IG Publisher tool in &lt;strong&gt;input-cache&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;
If you are blocked by a firewall, or if for any reason &lt;code&gt;_updatePublisher&lt;/code&gt; fails to execute, download the current IG Publisher jar file &lt;a href=&#34;https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar&#34;&gt;here&lt;/a&gt;. When the file has downloaded, move it into the &lt;strong&gt;input-cache&lt;/strong&gt; directory (which you may need to create as a &lt;em&gt;sibling&lt;/em&gt; to the &lt;strong&gt;input&lt;/strong&gt; directory).
&lt;/div&gt;

&lt;h3 id=&#34;running-the-ig-publisher&#34;&gt;Running the IG Publisher&lt;/h3&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Warning&lt;/h4&gt;
If you have never run the IG Publisher, you may need to install Jekyll first. See &lt;a href=&#34;https://confluence.hl7.org/display/FHIR/IG+Publisher+Documentation&#34;&gt;Installing the IG Publisher&lt;/a&gt; for details.
&lt;/div&gt;

&lt;p&gt;After the IG Publisher has been successfully downloaded, execute the following command to run it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;i class=&#39;fab fa-windows fa-fw&#39;&gt;&lt;/i&gt; &lt;i class=&#34;fas fa-dollar-sign&#34;&gt;&lt;/i&gt; _genonce
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;i class=&#39;fab fa-apple fa-fw&#39;&gt;&lt;/i&gt; &lt;i class=&#34;fas fa-dollar-sign&#34;&gt;&lt;/i&gt; ./_genonce.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will run the HL7 IG Publisher, which may take several minutes to complete. After the publisher is finished, open the file &lt;strong&gt;/output/index.html&lt;/strong&gt; in a browser to see the resulting IG.&lt;/p&gt;


&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;
&lt;p&gt;When running SUSHI, the IG Publisher will look for an optional &lt;strong&gt;fsh.ini&lt;/strong&gt; control file in the root directory of the project (the same directory that contains &lt;strong&gt;ig.ini&lt;/strong&gt;). This file should have &lt;code&gt;[FSH]&lt;/code&gt; on the first line, and can include a &lt;code&gt;sushi-version&lt;/code&gt; property, used to specify which version of SUSHI the IG Publisher should use, and a &lt;code&gt;timeout&lt;/code&gt; property, used to set a timeout for SUSHI (in seconds). The default timeout is 60 seconds. An example &lt;strong&gt;fsh.ini&lt;/strong&gt; file is provided below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;[FSH]
sushi-version = 0.16.0
timeout = 120
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Docs: Tips and Tricks</title>
      <link>https://fshschool.org/docs/sushi/tips/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fshschool.org/docs/sushi/tips/</guid>
      <description>
        
        
        &lt;h2 id=&#34;specifying-additional-resource-paths&#34;&gt;Specifying Additional Resource Paths&lt;/h2&gt;
&lt;p&gt;Sometimes authors may wish to put predefined resources in folders other than the normally supported &lt;code&gt;input&lt;/code&gt; sub-folders. To support this, SUSHI now recognizes the &lt;a href=&#34;http://build.fhir.org/codesystem-guide-parameter-code.html&#34;&gt;ImplementationGuide parameter&lt;/a&gt; &lt;code&gt;path-resource&lt;/code&gt;. Authors can include this parameter in &lt;code&gt;sushi-config.yaml&lt;/code&gt; to specify relative paths to additional folders that contain predefined resources. For example, the following can now be used in &lt;code&gt;sushi-config.yaml&lt;/code&gt; to include resources from the sub-folder &lt;code&gt;predefined-resources&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;parameters&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;path-resource&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- input/predefined-resources&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that the value of &lt;code&gt;path-resource&lt;/code&gt; is an array (or sequence) formatted in the standard YAML style.&lt;/p&gt;
&lt;p&gt;For SUSHI users who manage their own ImplementationGuide resource (i.e. &lt;em&gt;FSHOnly&lt;/em&gt; IGs), SUSHI will use the parameter from the ImplementationGuide resource:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;parameter&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;path-resource&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;input/predefined-resource&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;support-for-contentreference-elements&#34;&gt;Support for contentReference Elements&lt;/h2&gt;
&lt;p&gt;Content references allow ElementDefinitions to refer to be defined in terms of other elements. A typical application of a content reference is to prevent infinite regress in elements such as &lt;code&gt;Questionnaire.item.item&lt;/code&gt;, whose the definition refers back to &lt;code&gt;Questionnaire.item&lt;/code&gt; via a content reference.&lt;/p&gt;
&lt;p&gt;Content references are supported in &lt;code&gt;AddElementRules&lt;/code&gt; by way of the &lt;code&gt;contentReference&lt;/code&gt; keyword. This feature applies to Logical Models and custom Resources. To define an element of type &lt;code&gt;contentReference&lt;/code&gt;, include &lt;code&gt;contentReference &amp;lt;url-to-referenced-element&amp;gt;&lt;/code&gt; in the &lt;code&gt;AddElementRule&lt;/code&gt; where the &lt;code&gt;type&lt;/code&gt; would typically go. For example, the following &lt;code&gt;AddElementRule&lt;/code&gt; will create an element &lt;code&gt;section.section&lt;/code&gt; that is a contentReference to the element found at &lt;code&gt;http://example.org/StructureDefinition/Report#Report.section&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* section.section 0..1 contentReference http://example.org/StructureDefinition/Report#Report.section &amp;quot;A sub-section&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;inferred-choice-path&#34;&gt;Inferred Choice Path&lt;/h2&gt;
&lt;p&gt;When assigning values to choice elements (e.g., value[x]) on an Instance, type-specific elements (e.g., valueBoolean) should always be used in assignment rules. However, if the choice element has been constrained to a single type, SUSHI will infer the correct type-specific element.&lt;/p&gt;
&lt;p&gt;For example, SUSHI will infer the last line is to be interpreted as &lt;code&gt;* valueBoolean = true&lt;/code&gt; as the &lt;code&gt;Instance&lt;/code&gt; is exported. Authors are encouraged to not depend on this behavior, and use type-specific elements in instances.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Profile: BooleanObservation
Parent: Observation
* value[x] only boolean

Instance: MyObservation
InstanceOf: BooleanObservation
* status = #final
* code = http://example#somecode
* value[x] = true
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;referencing-the-canonical-url-of-the-implementationguide&#34;&gt;Referencing the Canonical URL of the ImplementationGuide&lt;/h2&gt;
&lt;p&gt;There may be cases where an author needs to refer to the canonical URL of the ImplementationGuide resource they are creating. SUSHI now supports using the &lt;code&gt;Canonical&lt;/code&gt; keyword with the IG&amp;rsquo;s &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;packageId&lt;/code&gt;, or &lt;code&gt;name&lt;/code&gt; that is specified in &lt;code&gt;sushi-config.yaml&lt;/code&gt;. For example, when creating a &lt;code&gt;CapabilityStatement&lt;/code&gt;, the following Assignment Rule can be added:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* implementationGuide = Canonical(my-package-id)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;extensions-for-representing-elements-from-other-versions-of-fhir&#34;&gt;Extensions for Representing Elements From Other Versions of FHIR&lt;/h2&gt;
&lt;p&gt;The FHIR specification defines behavior for a feature they refer to as &lt;a href=&#34;http://hl7.org/fhir/versions.html#extensions&#34;&gt;extensions for converting between versions&lt;/a&gt; (also known as &amp;ldquo;implied extensions&amp;rdquo;). This feature allows authors to represent specific elements from past and future versions of FHIR using a specific extension URL format (as described in the spec linked above). These extensions are not available in any physical package, but rather, are understood and processed conceptually.&lt;/p&gt;
&lt;p&gt;To use this feature in SUSHI, authors must specify a dependency on a package using an id and version of the form &lt;code&gt;hl7.fhir.extensions.&amp;lt;extension-version&amp;gt;: &amp;lt;package-version&amp;gt;&lt;/code&gt;, where valid extension-versions are &lt;code&gt;r2&lt;/code&gt;, &lt;code&gt;r3&lt;/code&gt;, &lt;code&gt;r4&lt;/code&gt;, and &lt;code&gt;r5&lt;/code&gt;. As an example, if an author wanted to represent the &lt;code&gt;Patient.animal.species&lt;/code&gt; &lt;a href=&#34;http://hl7.org/fhir/STU3/patient-definitions.html#Patient.animal.species&#34;&gt;element&lt;/a&gt; as defined in STU3, the dependencies should be specified as:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;dependencies&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hl7.fhir.extensions.r3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4.0.1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;An author can then reference the extension using a URL following the format defined in the FHIR specification linked above. For example, the extension referring to the R3 &lt;code&gt;Patient.animal.species&lt;/code&gt; element would be: &lt;code&gt;http://hl7.org/fhir/3.0/StructureDefinition/extension-Patient.animal.species&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See the following documentation for additional details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://fshschool.org/docs/sushi/configuration/#dependencies&#34;&gt;Dependencies&lt;/a&gt; from the FSH School SUSHI documentation&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://hl7.org/fhir/versions.html#extensions&#34;&gt;Extensions for Converting Between Versions&lt;/a&gt; from the current FHIR specification&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;extension-for-profiling-backboneelements&#34;&gt;Extension for Profiling BackboneElements&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;profile-element&lt;/code&gt; extension can be used to profile a BackboneElement by pointing at another BackboneElement defined elsewhere. This is typically used to indicate that constraints on the target of a contentReference should be applied to all the references as well. For example, the following snippet indicates that all recursive references to &lt;code&gt;Questionnaire.item&lt;/code&gt; (e.g., &lt;code&gt;Questionnaire.item.item&lt;/code&gt;) should conform to the same constraints as the original &lt;code&gt;Questionnaire.item&lt;/code&gt; in this profile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Profile: MyQuestionnaire
Parent: Questionnaire
* item ^type.profile = &amp;quot;http://example.org/StructureDefinition/MyQuestionnaire&amp;quot;
* item ^type.profile.extension.url = &amp;quot;http://hl7.org/fhir/StructureDefinition/elementdefinition-profile-element&amp;quot;
* item ^type.profile.extension.valueString = &amp;quot;Questionnaire.item&amp;quot;
// ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;See the following documentation for additional details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.hl7.org/fhir/extension-elementdefinition-profile-element.html&#34;&gt;Extension: profile-element&lt;/a&gt; from the FHIR specification&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chat.fhir.org/#narrow/stream/179252-IG-creation/topic/Clarification.20on.20contentReference/near/187852552&#34;&gt;Clarification on contentReference&lt;/a&gt; discussion on Zulip&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;instances-of-logical-models&#34;&gt;Instances of Logical Models&lt;/h2&gt;
&lt;p&gt;The IG Publisher supports including instances of logical models as binary resources. This feature was announced and discussed in a &lt;a href=&#34;https://chat.fhir.org/#narrow/stream/179252-IG-creation/topic/Logical.20Model.20Examples/near/251192344&#34;&gt;Logical Model Examples&lt;/a&gt; thread on chat.fhir.org.&lt;/p&gt;
&lt;p&gt;Authors can use &lt;code&gt;Instance:&lt;/code&gt; to create instances of logical models and instances of logical model profiles in the same way as all other FSH instances. These instances are exported using standard JSON serialization and automatically receive &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;meta.profile&lt;/code&gt; values when the logical model and SUSHI configuration support those elements. These instances have filenames starting with &lt;code&gt;Binary-&lt;/code&gt; and will be auto-encoded as part of the publishing process.&lt;/p&gt;
&lt;p&gt;Alternatively, authors can provide their own instances of logical models without defining them in FSH. The basic steps an author needs to take in order to manually include logical model examples in a SUSHI project are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add the example to the &lt;code&gt;input/resources&lt;/code&gt; or &lt;code&gt;input/examples&lt;/code&gt; folder
&lt;ul&gt;
&lt;li&gt;The file name of the example should be &lt;code&gt;Binary-{id}.json&lt;/code&gt; or &lt;code&gt;Binary-{id}.xml&lt;/code&gt; (substituting &lt;code&gt;{id}&lt;/code&gt; for the real id)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Add an entry for the example in the &lt;code&gt;sushi-config.yaml&lt;/code&gt; &lt;code&gt;resources&lt;/code&gt; property
&lt;ul&gt;
&lt;li&gt;Specify a &lt;code&gt;name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Specify &lt;code&gt;exampleCanonical&lt;/code&gt; pointing to the canonical of your logical model&lt;/li&gt;
&lt;li&gt;Add an extension w/ the proper resource format (&lt;code&gt;application/fhir+json&lt;/code&gt; or &lt;code&gt;application/xml&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For example, given the following simple logical model definition in an IG w/ IG canonical root &lt;code&gt;http://example.org&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Logical: MyLM
Id: MyLM
Title: &amp;quot;My LM&amp;quot;
Description: &amp;quot;This is mine&amp;quot;
* id 1..1 SU id &amp;quot;Identifier for the logical model&amp;quot;
* important 1..1 SU boolean &amp;quot;Is this logical model important&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Create the file &lt;code&gt;input/examples/Binary-my-logical-example.json&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;resourceType&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://example.org/StructureDefinition/MyLM&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;my-logical-example&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;important&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And add the following in your &lt;code&gt;sushi-config.yaml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;resources&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Binary/my-logical-example&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;extension&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;http&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;//hl7.org/fhir/tools/StructureDefinition/implementationguide-resource-format&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;valueCode&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;application/fhir+json&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Example&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;of&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;LM&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;exampleCanonical&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;http&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;//example.org/StructureDefinition/MyLM&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Both approaches will result in your logical model example being listed and displayed as a proper example of the logical model.&lt;/p&gt;
&lt;p&gt;If the logical model does not have &lt;code&gt;resourceType&lt;/code&gt; or &lt;code&gt;id&lt;/code&gt;, the same steps as above can be used with a few small adjustments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In step 1, the file name of the example can be any valid file name (e.g. &lt;code&gt;hook-example.json&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;In step 2, the key in the resources list should be &lt;code&gt;Binary/{filename}&lt;/code&gt;, where &lt;code&gt;{filename}&lt;/code&gt; matches the the file name of the example without the file extension (e.g. &lt;code&gt;Binary/hook-example&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;manual-slice-ordering&#34;&gt;Manual Slice Ordering&lt;/h2&gt;
&lt;p&gt;Authors can exercise full manual control over the ordering of slice elements within Instances. Previous versions of SUSHI allowed for partial control of slice element ordering, but some ordering was determined by SUSHI&amp;rsquo;s implementation and could not be affected by an author. In the current version of SUSHI (&lt;code&gt;v3.0.0&lt;/code&gt; or later), authors can configure their FSH projects to manually control slice ordering. When using manual slice ordering, authors should use soft indexing and avoid using hard numeric indices.&lt;/p&gt;
&lt;p&gt;Manual slice ordering follows the following rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;slices appear on an Instance in the order of FSH rules&lt;/li&gt;
&lt;li&gt;any required slices (&lt;code&gt;1..*&lt;/code&gt;) that are not referenced in a FSH rule on the Instance appear after all referenced slices in the order in which they are defined on the Instance&amp;rsquo;s StructureDefinition (the instance&amp;rsquo;s &lt;code&gt;InstanceOf&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;a rule that references a sliced element should reference it using the slice name&lt;/li&gt;
&lt;li&gt;to reference multiple items in a slice, use hard or soft indices after the slice name (e.g., &lt;code&gt;component[myslice][0]&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;when rule paths use only a soft index (instead of a slice name), the resolved numeric index will take into account named slices that have already been referenced by previous rule paths. This should only be used to add items that do not belong to a defined slice.
&lt;ul&gt;
&lt;li&gt;Note: when manual slice ordering is enabled, it is not possible to refer to an element with a slice name by soft numeric index only. If hard numeric indices are used (not recommended), they may still directly access previously referenced named slices. This may lead to undesired output.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To use this ordering, add the following to &lt;code&gt;sushi-config.yaml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;instanceOptions&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;manualSliceOrdering&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Profile: ExampleBPObservation
Parent: Observation
// slicing rules for component omitted for brevity
* component contains systolicBP 1..1 MS and diastolicBP 1..1 MS
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When using this profile without manual slice ordering, the &lt;code&gt;systolicBP&lt;/code&gt; slice will always be the first entry in the &lt;code&gt;component&lt;/code&gt; element, and the &lt;code&gt;diastolicBP&lt;/code&gt; slice will always be the second entry in the &lt;code&gt;component&lt;/code&gt; element. So, the following two instances would have the same &lt;code&gt;component&lt;/code&gt; elements:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Instance: ExampleByName
InstanceOf: ExampleBPObservation
// some required elements omitted for brevity
* component[systolicBP].valueQuantity = 108 &#39;mm[Hg]&#39;
* component[diastolicBP].valueQuantity = 45 &#39;mm[Hg]&#39;

Instance: ExampleByNumber
InstanceOf: ExampleBPObservation
// some required elements omitted for brevity
* component[0].valueQuantity = 108 &#39;mm[Hg]&#39;
* component[1].valueQuantity = 45 &#39;mm[Hg]&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When manual slice ordering is enabled, rules that set values on the &lt;code&gt;systolicBP&lt;/code&gt; or &lt;code&gt;diastolicBP&lt;/code&gt; slices &lt;em&gt;must&lt;/em&gt; use the slice name. With this option enabled, the &lt;code&gt;ExampleByName&lt;/code&gt; instance would produce the same entries in &lt;code&gt;component&lt;/code&gt;, but the &lt;code&gt;ExampleByNumber&lt;/code&gt; instance would contain four entries in the &lt;code&gt;component&lt;/code&gt; list: two entries that are not part of a named slice, followed by the &lt;code&gt;systolicBP&lt;/code&gt; slice, and finally the &lt;code&gt;diastolicBP&lt;/code&gt; slice.&lt;/p&gt;
&lt;p&gt;When manual slice ordering is enabled, if any required slices with required assigned values are not present in an instance&amp;rsquo;s list of rules, they will be added in the order in which they are defined. If you want these slices to appear in a different order on the instance without adding any new information to the slices, add rules on the instance that reassign the existing values:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Alias: $ObservationCategoryCodes = http://terminology.hl7.org/CodeSystem/observation-category

Profile: ExampleObservation
Parent: Observation
// slicing rules for category omitted for brevity
* category contains CategoryA 1..1 and CategoryB 1..1
* category[CategoryA] = $ObservationCategoryCodes#vital-signs
* category[CategoryB] = $ObservationCategoryCodes#survey

Instance: ReorderedExample
InstanceOf: ExampleObservation
// some required elements omitted for brevity
* category[CategoryB] = $ObservationCategoryCodes#survey
* category[CategoryA] = $ObservationCategoryCodes#vital-signs
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This instance&amp;rsquo;s &lt;code&gt;category&lt;/code&gt; element will have the &lt;code&gt;survey&lt;/code&gt; code as the first entry and the &lt;code&gt;vital-signs&lt;/code&gt; code as the second entry.&lt;/p&gt;
&lt;p&gt;Soft index resolution will account for named slices that have been referenced in previous rules:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Instance: SoftIndexExample
InstanceOf: ExampleObservation
// some required elements omitted for brevity
* category[+] = $ObservationCategoryCodes#laboratory // this + will resolve to index 0
* category[CategoryB] = $ObservationCategoryCodes#survey
* category[+] = $ObservationCategoryCodes#exam // this + will resolve to index 2, since the CategoryB slice occupies index 1
* category[CategoryA] = $ObservationCategoryCodes#vital-signs
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This instance&amp;rsquo;s &lt;code&gt;category&lt;/code&gt; element will have four entries in the order specified: &lt;code&gt;laboratory&lt;/code&gt;, &lt;code&gt;survey&lt;/code&gt;, &lt;code&gt;exam&lt;/code&gt;, &lt;code&gt;vital-signs&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;link-references&#34;&gt;Link References&lt;/h2&gt;
&lt;p&gt;SUSHI creates the &lt;strong&gt;fsh-generated/includes/fsh-link-references.md&lt;/strong&gt; file to make it easier to create links to resource definitions in other markdown pages. This file&amp;rsquo;s contents are a list of markdown link definitions, with one link for each resource in your &lt;strong&gt;ImplementationGuide.json&lt;/strong&gt; file. This will include resources defined in FSH, the &lt;code&gt;resources&lt;/code&gt; configuration property, and predefined resources. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;[MyPatient]: StructureDefinition-MyPatient.html
[MyExtension]: StructureDefinition-MyExtension.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The rules for determining what the link text will be for a given resource are as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For resources defined in FSH:
&lt;ul&gt;
&lt;li&gt;Non-instance resources use the &lt;em&gt;name&lt;/em&gt; of the resource.&lt;/li&gt;
&lt;li&gt;Instances use the &lt;em&gt;id&lt;/em&gt; of the resource.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For predefined resources:
&lt;ul&gt;
&lt;li&gt;Resources in the &lt;code&gt;input/examples&lt;/code&gt; folder use the &lt;em&gt;id&lt;/em&gt; of the resource.&lt;/li&gt;
&lt;li&gt;Resources in other sub-folders of &lt;code&gt;input&lt;/code&gt; attempt to use the &lt;em&gt;name&lt;/em&gt; of the resource if this is a string value, and otherwise use the &lt;em&gt;id&lt;/em&gt; of the resource.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For resources that are manually configured in &lt;code&gt;sushi-config.yaml&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;The &lt;em&gt;name&lt;/em&gt; of the resource is used, if available.&lt;/li&gt;
&lt;li&gt;Otherwise, the &lt;em&gt;id&lt;/em&gt; of the resource is used.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To use these generated links, include &lt;code&gt;fsh-generated-links.md&lt;/code&gt; in your custom markdown pages. This can be done by including the following line at the bottom of your custom markdown page:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;{% include fsh-link-references.md %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then, you can create links by including the resource&amp;rsquo;s link text within square brackets. For example, if you had a Profile named &lt;code&gt;MyPatient&lt;/code&gt;, your custom markdown file could look like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;## Patients
&lt;/span&gt;&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;&lt;/span&gt;This IG provides [MyPatient] for patient information.

{% include fsh-link-references.md %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;choosing-a-snomed-ct-edition&#34;&gt;Choosing a SNOMED CT edition&lt;/h2&gt;
&lt;p&gt;To specify a certain edition of SNOMED CT - for example to ensure terminology validation works correctly - do the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add or modify the &lt;code&gt;parameters&lt;/code&gt; section in your &lt;code&gt;sushi-config.yaml&lt;/code&gt; to specify a &lt;code&gt;path-expansion-params&lt;/code&gt; parameter.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;parameters&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;path-expansion-params&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Parameters-expansion.json&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Create an &lt;code&gt;input/fsh/expansion.fsh&lt;/code&gt; file and define an instance of &lt;code&gt;Parameters&lt;/code&gt; with the id &lt;code&gt;expansion&lt;/code&gt;. Within the Parameters instance, specify a &lt;code&gt;system-version&lt;/code&gt; parameter. For example, if you&amp;rsquo;d like to use the US edition of SNOMED, add this definition:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;Instance: expansion
InstanceOf: Parameters
Description: &amp;quot;SNOMED CT expansion parameter&amp;quot;
Usage: #definition
* parameter[+].name = &amp;quot;system-version&amp;quot;
* parameter[=].valueCanonical = &amp;quot;http://snomed.info/sct|http://snomed.info/sct/731000124108&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you&amp;rsquo;d like to use another language, such as Swedish, choose this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Instance: expansion
InstanceOf: Parameters
Description: &amp;quot;SNOMED CT Swedish expansion parameter&amp;quot;
Usage: #definition
* parameter[+].name = &amp;quot;displayLanguage&amp;quot;
* parameter[=].valueCode = urn:ietf:bcp:47#se
* parameter[+].name = &amp;quot;system-version&amp;quot;
* parameter[=].valueCanonical = &amp;quot;http://snomed.info/sct|http://snomed.info/sct/45991000052106&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;system-version&lt;/code&gt; and &lt;code&gt;displayLanguage&lt;/code&gt; parameters correspond to the parameters of the same name in FHIR&amp;rsquo;s &lt;a href=&#34;https://hl7.org/fhir/valueset-operation-expand.html&#34;&gt;$expand&lt;/a&gt; operation.&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: SUSHI Tutorial</title>
      <link>https://fshschool.org/docs/sushi/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fshschool.org/docs/sushi/tutorial/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://build.fhir.org/ig/HL7/fhir-shorthand/index.html&#34;&gt;FHIR Shorthand&lt;/a&gt; (FSH) is a specially-designed language for defining the content of FHIR Implementation Guides (IGs). It is simple and compact, with tools to produce Fast Healthcare Interoperability Resources (FHIR) profiles, extensions and IGs. FSH is compiled from text files to FHIR artifacts using &lt;a href=&#34;https://fshschool.org/docs/sushi&#34;&gt;SUSHI&lt;/a&gt;. To get started using FSH, you need to install and run SUSHI using the steps below.&lt;/p&gt;


&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;
If you find this helpful, you may also want to look at our &lt;a href=&#34;https://fshschool.github.io/courses/&#34;&gt;self-service FSH Seminar course&lt;/a&gt;, which includes a more extensive walkthrough of using SUSHI and FSH.
&lt;/div&gt;

&lt;h3 id=&#34;step-1-review-introduction&#34;&gt;Step 1: Review Introduction&lt;/h3&gt;
&lt;p&gt;If you haven&amp;rsquo;t done so already, please read or review the &lt;a href=&#34;https://fshschool.org/docs/introduction/&#34;&gt;Introduction&lt;/a&gt; documentation to gain an understanding of the conventions used in this tutorial and the resources available to you.&lt;/p&gt;
&lt;h3 id=&#34;step-2-install-nodejs-and-sushi&#34;&gt;Step 2: Install Node.js and Sushi&lt;/h3&gt;
&lt;p&gt;If you have not already installed SUSHI, follow the &lt;a href=&#34;https://fshschool.org/docs/sushi/installation&#34;&gt;SUSHI Installation&lt;/a&gt; instructions.&lt;/p&gt;
&lt;h3 id=&#34;step-3-download-sample-fsh-project&#34;&gt;Step 3: Download Sample FSH Project&lt;/h3&gt;
&lt;p&gt;To start with some working examples of FSH files and a skeleton FSH project, &lt;a href=&#34;https://fshschool.org/docs/sushi/tutorial/fsh-tutorial.zip&#34;&gt;&lt;i class=&#39;fas fa-download fa-fw&#39;&gt;&lt;/i&gt; download the FSH Tutorial Starter&lt;/a&gt; and unzip it into a directory of your choice.&lt;/p&gt;
&lt;p&gt;After the file is unzipped, you should see two subdirectories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;FishExample&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FishExampleComplete&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Change the working directory to FishExample. There is a &lt;strong&gt;sushi-config.yaml&lt;/strong&gt; file, and two FSH files within the &lt;strong&gt;/input/fsh&lt;/strong&gt; subdirectory:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;FishPatient.fsh&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Veterinarian.fsh&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition, there are several files for building the IG.&lt;/p&gt;
&lt;h3 id=&#34;step-4-run-sushi&#34;&gt;Step 4: Run SUSHI&lt;/h3&gt;
&lt;p&gt;Now that you have SUSHI installed and a minimal FSH project, open up a command window, and navigate to the &lt;strong&gt;FishExample&lt;/strong&gt; directory. Run SUSHI on those FSH files by executing:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;i class=&#34;fas fa-dollar-sign&#34;&gt;&lt;/i&gt; sushi build .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;
The dot (.) represents &amp;ldquo;this directory,&amp;rdquo; the location of the FSH files. You can also specify the location explicitly by replacing the dot with a directory path.
&lt;/div&gt;

&lt;p&gt;Running SUSHI will create a &lt;strong&gt;FishExample/fsh-generated&lt;/strong&gt; directory, and populate it with the files needed to create the IG using the HL7 FHIR IG Publisher tool.&lt;/p&gt;
&lt;p&gt;While running SUSHI, there will be a series of informational messages. When SUSHI completes, you should see a summary output similar this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;╔════════════════════════ SUSHI RESULTS ══════════════════════════╗
║ ╭───────────────┬──────────────┬──────────────┬───────────────╮ ║
║ │    Profiles   │  Extensions  │   Logicals   │   Resources   │ ║
║ ├───────────────┼──────────────┼──────────────┼───────────────┤ ║
║ │       2       │      0       │      0       │       0       │ ║
║ ╰───────────────┴──────────────┴──────────────┴───────────────╯ ║
║ ╭────────────────────┬───────────────────┬────────────────────╮ ║
║ │      ValueSets     │    CodeSystems    │     Instances      │ ║
║ ├────────────────────┼───────────────────┼────────────────────┤ ║
║ │         0          │         0         │         0          │ ║
║ ╰────────────────────┴───────────────────┴────────────────────╯ ║
║                                                                 ║
╠═════════════════════════════════════════════════════════════════╣
║ Fin-tastic job!                        0 Errors      0 Warnings ║
╚═════════════════════════════════════════════════════════════════╝
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The files generated by SUSHI are located in the &lt;strong&gt;FishExample/fsh-generated&lt;/strong&gt; directory. Check that the &lt;strong&gt;FishExample/fsh-generated/resources&lt;/strong&gt; subdirectory contains two generated StructureDefinitions and a generated ImplementationGuide.&lt;/p&gt;
&lt;h3 id=&#34;step-5-generate-the-sample-ig&#34;&gt;Step 5: Generate the Sample IG&lt;/h3&gt;
&lt;p&gt;At the command prompt, enter:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;i class=&#39;fab fa-windows fa-fw&#39;&gt;&lt;/i&gt; &lt;i class=&#34;fas fa-dollar-sign&#34;&gt;&lt;/i&gt; _updatePublisher
&lt;i class=&#39;fab fa-apple fa-fw&#39;&gt;&lt;/i&gt; &lt;i class=&#34;fas fa-dollar-sign&#34;&gt;&lt;/i&gt; ./_updatePublisher.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will download the latest version of the HL7 FHIR IG Publisher tool into &lt;strong&gt;./input-cache&lt;/strong&gt;. &lt;em&gt;This step can be skipped if you already have run the command recently, and have the latest version of the IG Publisher tool.&lt;/em&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;
If you are blocked by a firewall, or if for any reason &lt;code&gt;_updatePublisher&lt;/code&gt; fails to execute, download the current IG Publisher jar file &lt;a href=&#34;https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar&#34;&gt;here&lt;/a&gt;. When the file has downloaded, move it into the directory &lt;strong&gt;/FishExample/input-cache&lt;/strong&gt; (creating the directory if necessary).
&lt;/div&gt;



&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Warning&lt;/h4&gt;
Before proceeding to the next command: If you have never run the IG Publisher, you may need to install Jekyll first. See &lt;a href=&#34;https://confluence.hl7.org/display/FHIR/IG+Publisher+Documentation&#34;&gt;Installing the IG Publisher&lt;/a&gt; for details.
&lt;/div&gt;

&lt;p&gt;Now run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;i class=&#39;fab fa-windows fa-fw&#39;&gt;&lt;/i&gt; &lt;i class=&#34;fas fa-dollar-sign&#34;&gt;&lt;/i&gt; _genonce
&lt;i class=&#39;fab fa-apple fa-fw&#39;&gt;&lt;/i&gt; &lt;i class=&#34;fas fa-dollar-sign&#34;&gt;&lt;/i&gt; ./_genonce.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will run the HL7 FHIR IG generator, which may take several minutes to complete.&lt;/p&gt;
&lt;p&gt;After the publisher is finished, open the file &lt;strong&gt;/FishExample/output/index.html&lt;/strong&gt; to see the resulting IG.&lt;/p&gt;
&lt;p&gt;If you click on the Artifacts Summary item in the menu, you will see that the IG contains two profiles, FishPatient and Veterinarian. If you look at each of them, you will notice that they have minimal differentials. The only way in which they differ from their base resource is that they require at least one name.&lt;/p&gt;
&lt;h3 id=&#34;step-6-setting-cardinalities-in-a-profile&#34;&gt;Step 6: Setting Cardinalities in a Profile&lt;/h3&gt;
&lt;p&gt;It is not widely known, but FHIR is designed to be used for veterinary medicine as well as human. For a non-human patient, we need to record the species. The Patients in this Tutorial are going to be various species of fish 🐟.&lt;/p&gt;
&lt;p&gt;Since fish don&amp;rsquo;t get legally married (although some species do pair bond) and they don&amp;rsquo;t communicate in a human language, the first thing we&amp;rsquo;ll do in the FishPatient profile is eliminate these elements. To do this, open the file &lt;strong&gt;FishPatient.fsh&lt;/strong&gt; in your favorite plain-text editor, and add the following rules after the last non-blank line in the file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;* maritalStatus 0..0
* communication 0..0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that rules start with &lt;code&gt;*&lt;/code&gt;. FSH expresses cardinality as, &lt;code&gt;{min}..{max}&lt;/code&gt;, the same as FHIR.&lt;/p&gt;
&lt;h3 id=&#34;step-7-create-a-species-extension-for-fishpatient&#34;&gt;Step 7: Create a Species Extension for FishPatient&lt;/h3&gt;
&lt;p&gt;To specify the species of our aquatic patients, we&amp;rsquo;ll need an &lt;a href=&#34;https://www.hl7.org/fhir/R4/extensibility.html#extension&#34;&gt;extension&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We have a choice of whether to make the extension &lt;strong&gt;inline&lt;/strong&gt; or &lt;strong&gt;standalone&lt;/strong&gt;. Inline extensions do not result in a separate StructureDefinition, and cannot be reused in other profiles. Standalone extensions are the opposite: they have independent StructureDefinitions, and can be reused. For this example, let&amp;rsquo;s make a standalone extension.&lt;/p&gt;
&lt;p&gt;Extensions are created using the &lt;code&gt;contains&lt;/code&gt; keyword. To add a standalone species extension, add the following rule after the cardinality rules:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;* extension contains FishSpecies named species 0..1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This rule states that the &lt;code&gt;extension&lt;/code&gt; array of the Patient resource will incorporate the &lt;code&gt;FishSpecies&lt;/code&gt; extension with the local name &lt;code&gt;species&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To define the &lt;code&gt;FishSpecies&lt;/code&gt; extension, add the following lines to the end of the &lt;strong&gt;FishPatient.fsh&lt;/strong&gt; file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Extension:   FishSpecies
Id:          fish-species
Title:       &amp;#34;Fish Species&amp;#34;
Description: &amp;#34;The species of the fish.&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;
FSH ignores extra whitespace, so authors can choose to use whitespace for improved visual alignment, as in the extension definition above.
&lt;/div&gt;

&lt;p&gt;Run SUSHI again (&lt;code&gt;sushi build .&lt;/code&gt;). The count of Extensions should now be 1.&lt;/p&gt;
&lt;h3 id=&#34;step-8-define-a-value-set-for-fish-species&#34;&gt;Step 8: Define a Value Set for Fish Species&lt;/h3&gt;
&lt;p&gt;The FishSpecies extension doesn&amp;rsquo;t quite do its job yet, because we haven&amp;rsquo;t specified what type of values it might accept. To add this information, enter these lines following the description of FishSpecies:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;* value[x] only CodeableConcept
* valueCodeableConcept from FishSpeciesValueSet (extensible)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The first rule restricts the value[x] (a built-in element of every FHIR extension) to a CodeableConcept using the &lt;code&gt;only&lt;/code&gt; keyword. The second binds it to a value set (yet to be defined) using the &lt;code&gt;from&lt;/code&gt; keyword. The &lt;a href=&#34;http://hl7.org/fhir/valueset-binding-strength.html&#34;&gt;binding strength&lt;/a&gt; will be &lt;code&gt;extensible&lt;/code&gt;, meaning the codes in the FishSpeciesValueSet must be used except when the value set is missing a specific fish species.&lt;/p&gt;
&lt;p&gt;To define FishSpeciesValueSet, add the following lines to the same file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;ValueSet:    FishSpeciesValueSet
Title:       &amp;#34;Fish Species Value Set&amp;#34;
Id:          fish-species-value-set
Description: &amp;#34;Codes describing various species of fish, taken from SNOMED-CT.&amp;#34;
* codes from system http://snomed.info/sct where concept is-a SCT#90580008  &amp;#34;Fish (organism)&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Info&lt;/h4&gt;
The rule in the value set definition above selects all codes from SNOMED-CT that are children of the concept &amp;ldquo;Fish (organism)&amp;rdquo;.
&lt;/div&gt;

&lt;p&gt;Run SUSHI again. The count of ValueSets should now be 1. Try generating the IG by running &lt;code&gt;_genonce&lt;/code&gt; again. Open the file &lt;strong&gt;/FishExample/output/index.html&lt;/strong&gt; to see the resulting IG.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Do you see where the FishPatient profile is in the IG?&lt;/li&gt;
&lt;li&gt;Does the differential reflect your changes?&lt;/li&gt;
&lt;li&gt;How does FHIR render the value set you defined?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;step-9-define-an-alias&#34;&gt;Step 9: Define an Alias&lt;/h3&gt;
&lt;p&gt;An &lt;code&gt;Alias&lt;/code&gt; is a way to define a shorthand for a URL or OID. For example, in the value set definition above, we could have defined an &lt;code&gt;Alias&lt;/code&gt; to make referencing the &lt;code&gt;http://snomed.info/sct&lt;/code&gt; URL easier, as shown below. Aliases are conventionally defined at the top of the file.&lt;/p&gt;
&lt;p&gt;Add this line at the top of the &lt;strong&gt;FishPatient.fsh&lt;/strong&gt; file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Alias:   SCT = http://snomed.info/sct
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and then replace the last line in the FishSpeciesValueSet with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;* codes from system SCT where concept is-a #90580008  &amp;#34;Fish (organism)&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;
Using aliases has no effect on the IG; it simply makes the FSH code a bit neater.
&lt;/div&gt;

&lt;h3 id=&#34;step-10-create-an-instance-of-fishpatient&#34;&gt;Step 10: Create an Instance of FishPatient&lt;/h3&gt;
&lt;p&gt;Every IG should provide examples of its profiles. Let&amp;rsquo;s do that by introducing an example FishPatient named Shorty. Create this example instance using the &lt;code&gt;Instance&lt;/code&gt; keyword, with &lt;code&gt;InstanceOf&lt;/code&gt; set to &lt;code&gt;FishPatient&lt;/code&gt; and &lt;code&gt;Usage&lt;/code&gt; set to &lt;code&gt;Example&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Include the following information about Shorty in the instance:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;His given (first) name is &amp;ldquo;Shorty&amp;rdquo; and his family (last) name is &amp;ldquo;Koi-Fish&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Shorty is a Koi fish (Cyprinus rubrofuscus), represented as SNOMED-CT code 47978005 &amp;ldquo;Carpiodes cyprinus (organism)&amp;rdquo;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you need help with this, you can reference the &lt;a href=&#34;https://build.fhir.org/ig/HL7/fhir-shorthand/reference.html#defining-instances&#34;&gt;Defining Instances&lt;/a&gt; section of the specification. If you still need help, you can peek at the FSH files in the &lt;strong&gt;FishExampleComplete&lt;/strong&gt; directory.&lt;/p&gt;
&lt;p&gt;Run SUSHI again, and re-generate the IG.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Did it compile without errors?&lt;/li&gt;
&lt;li&gt;What does the IG look like now?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;step-11-extend-the-veterinarian-profile&#34;&gt;Step 11: Extend the Veterinarian Profile&lt;/h3&gt;
&lt;p&gt;Now, add constraints and/or extensions to the Veterinarian profile:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add qualifications consistent with a Veterinary practice. Qualifications are taken from code system &lt;code&gt;http://nucc.org/provider-taxonomy&lt;/code&gt;, and the code is &lt;code&gt;174M00000X&lt;/code&gt;, for &amp;ldquo;Veterinarian&amp;rdquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In addition, slice the &lt;code&gt;identifier&lt;/code&gt; array, making a license number required. The code system is &lt;code&gt;http://terminology.hl7.org/CodeSystem/v2-0203&lt;/code&gt; and the code is &lt;code&gt;LN&lt;/code&gt;, for &amp;ldquo;License number&amp;rdquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you need help with this, you can refer to the &lt;a href=&#34;https://build.fhir.org/ig/HL7/fhir-shorthand/reference.html#assignment-rules&#34;&gt;assignment rules&lt;/a&gt; and &lt;a href=&#34;https://build.fhir.org/ig/HL7/fhir-shorthand/reference.html#contains-rules-for-slicing&#34;&gt;slicing rules&lt;/a&gt; sections of the specification. If you still need help, you can peek at the FSH files in the &lt;strong&gt;FishExampleComplete&lt;/strong&gt; directory.&lt;/p&gt;
&lt;p&gt;Run SUSHI again, and re-generate the IG.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Did it compile without errors?&lt;/li&gt;
&lt;li&gt;What does the IG look like now?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Congratulations! You&amp;rsquo;ve completed the FSH tutorial. It might be time to feast on some sushi!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: API</title>
      <link>https://fshschool.org/docs/sushi/api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fshschool.org/docs/sushi/api/</guid>
      <description>
        
        
        &lt;p&gt;SUSHI exposes a &lt;code&gt;fshToFhir&lt;/code&gt; function that can be used to convert FSH strings to FHIR JSON.&lt;/p&gt;
&lt;h2 id=&#34;syntax&#34;&gt;Syntax&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;fshToFhir&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fshString&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;options&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;parameters&#34;&gt;Parameters&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;fshString&lt;/code&gt; - A string containing FHIR Shorthand definitions.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;options&lt;/code&gt; - An object which can have any combination of the following attributes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;canonical&lt;/code&gt; - A string used to specify the canonical URL.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;version&lt;/code&gt; - A string used to specify the version.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fhirVersion&lt;/code&gt; - A string used to specify the version of FHIR to use. Note that SUSHI only supports FHIR R4 and R5.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dependencies&lt;/code&gt; - An array of objects used to specify dependencies required for processing the FSH. Each object should have a &lt;code&gt;packageId&lt;/code&gt; and &lt;code&gt;version&lt;/code&gt;, and optionally a &lt;code&gt;uri&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;logLevel&lt;/code&gt; - A string that specifies what level of logging to use when processing FSH. Options are &lt;code&gt;silent&lt;/code&gt;, &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, and &lt;code&gt;error&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;snapshot&lt;/code&gt; - (EXPERIMENTAL) A boolean that specifies whether to generate the &lt;code&gt;snapshot&lt;/code&gt; data element in Structure Definition output (default: false)&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Warning&lt;/h4&gt;
The &lt;code&gt;snapshot&lt;/code&gt; option, when set to true, triggers the generation of &lt;code&gt;StructureDefinition.snapshot&lt;/code&gt; data elements.
Use of this option should be considered EXPERIMENTAL! The &lt;code&gt;StructureDefinition.snapshot&lt;/code&gt; data elements generated
by SUSHI are likely not perfect and differ from the snapshots that the IG Publisher and/or Simplifier would create.
If you plan to publish these resources, it would be better to use one of those other tools to generate the snapshots.
&lt;/div&gt;

&lt;p&gt;See the &lt;a href=&#34;https://fshschool.org/docs/sushi/configuration/#full-configuration&#34;&gt;configuration&lt;/a&gt; documentation for more information on &lt;code&gt;canonical&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;, &lt;code&gt;fhirVersion&lt;/code&gt;, and &lt;code&gt;dependencies&lt;/code&gt;. These properties correspond to the properties of the same name that are used in &lt;code&gt;sushi-config.yaml&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;return-value&#34;&gt;Return Value&lt;/h2&gt;
&lt;p&gt;A &lt;code&gt;Promise&lt;/code&gt; that resolves to an object with the following attributes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fhir&lt;/code&gt; - An array of FHIR definitions generated from the input FSH.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;errors&lt;/code&gt; - An array of objects containing any errors detected during processing. Each object has a &lt;code&gt;message&lt;/code&gt; with the error message and optionally has &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;location&lt;/code&gt; properties with additional information.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;warnings&lt;/code&gt; - An array of objects containing any warnings detected during processing. Each object has a &lt;code&gt;message&lt;/code&gt; with the warning message and optionally has &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;location&lt;/code&gt; properties with additional information.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;p&gt;To use &lt;code&gt;fshToFhir&lt;/code&gt;, you must first install &lt;code&gt;fsh-sushi&lt;/code&gt; as a dependency of your project:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;i class=&#34;fas fa-dollar-sign&#34;&gt;&lt;/i&gt; npm install fsh-sushi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once &lt;code&gt;fsh-sushi&lt;/code&gt; is installed as a dependency of your project, you can &lt;code&gt;import&lt;/code&gt; and use this function as shown:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;sushiClient&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;fsh-sushi&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Example basic usage
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sushiClient&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fshToFhir&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Your FSH here&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;then&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;results&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// handle results
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;})&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;catch&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;err&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// handle thrown errors
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;});&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Example usage with options
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sushiClient&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fshToFhir&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Your FSH here&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;canonical&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://example.com&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1.2.3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;fhirVersion&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;4.0.1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;dependencies&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;packageId&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;hl7.fhir.us.core&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;3.1.0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}],&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;logLevel&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;})&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;then&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;results&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// handle results
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;})&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;catch&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;err&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// handle thrown errors
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
